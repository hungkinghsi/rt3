<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Function props</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part141.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part143.htm">Next &gt;</a></p><h4 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark276">Function props</a><a name="bookmark341">&zwnj;</a><a name="bookmark342">&zwnj;</a></h4><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">In the previous section, we saw how props can be set for functions with our <span class="s22">onClick </span>event handlers. In this section, we&#39;ll implement our own function props, so that the consumer of our component can execute some logic when the <b>Ok </b>and <b>Cancel </b>buttons are pressed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 91%;text-align: left;">1. Let&#39;s implement these two additional props on our interface. The function will take no parameters, and not return anything. So, the type is <span class="s22">() =&gt; void</span>, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 96pt;text-indent: -5pt;line-height: 120%;text-align: left;">interface IProps { title: string; content: string;</p><p class="s12" style="padding-left: 96pt;text-indent: 0pt;line-height: 113%;text-align: left;">cancelCaption?: string; okCaption?: string; <span class="s21">onOkClick: () =&gt; void; onCancelClick: () =&gt; void;</span></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 8pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">The props are required, so, we immediately get a compilation error in <span class="s22">App.tsx</span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">when we reference the <span class="s22">Confirm </span>component. We&#39;ll fix this a little later.</p><p style="padding-top: 9pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Next, let&#39;s invoke our function props when the buttons are clicked, instead of logging messages to the console:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">private handleCancelClick = () =&gt; {</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">this.props.onCancelClick();</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">private handleOkClick = () =&gt; {</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">this.props.onOkClick();</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">3. We&#39;ll fix the compilation error now, by implementing arrow function handlers for these props in <span class="s22">App.tsx</span>. First let&#39;s create the arrow function handlers:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 79pt;text-indent: -10pt;line-height: 106%;text-align: left;">private handleCancelConfirmClick = () =&gt; { console.log(&quot;Cancel clicked&quot;);</p><p class="s21" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 79pt;text-indent: -10pt;line-height: 106%;text-align: left;">private handleOkConfirmClick = () =&gt; { console.log(&quot;Ok clicked&quot;);</p><p class="s21" style="padding-left: 68pt;text-indent: 0pt;line-height: 10pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><a name="bookmark343">4. Now we can reference these functions we where consume the </a><span class="s22">Confirm</span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">component:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;Confirm</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">...</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;line-height: 106%;text-align: left;">onCancelClick={this.handleCancelConfirmClick} onOkClick={this.handleOkConfirmClick}</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">/&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">If we go back to our app, we&#39;ll see the compilation errors have been resolved. If we click the <b>Ok </b>and <b>Cancel </b>buttons, we get the message output to the console as expected:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="186" alt="image" src="Image_175.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: justify;"><a name="bookmark277">At the moment, our buttons still don&#39;t do anything other than log a message to the console. We want the confirmation dialog to close when we click either button. We&#39;ll implement this in the next section.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part141.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part143.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
