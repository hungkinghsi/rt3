<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Chapter 6: Component Patterns</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part358.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part360.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark961">Chapter 6: Component Patterns</a><a name="bookmark973">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. What special property does React give us to access a components children?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">A property called <span class="s22">children</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. How many components can share state with React context?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">As many components as we like that are under the provider component in the component hierarchy</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">3. When consuming the React context, what pattern does it use to allow us to render our content with the context?</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">The render props pattern</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. How many render props can we have in a component?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">As many as we like</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. How many children props do we have in a component?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 73pt;text-indent: 0pt;text-align: left;">1</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. We only used <span class="s22">withLoader </span>on the product page. We have the following function in <span class="s22">ProductData.ts </span>to get all the products:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">export const getProducts = async (): Promise&lt;IProduct[]&gt; =&gt; { await wait(1000);</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">return products;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">Can you use this to implement a loader spinner on the products page by consuming the <span class="s22">withLoader </span>HOC.</p><p style="padding-top: 9pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">First we split <span class="s22">ProductPage </span>into a container and presentational component.  The presentational component will render the product list exporting it wrapped in the <span class="s22">withLoader </span>HOC:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">import * as React from &quot;react&quot;;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">import { Link } from &quot;react-router-dom&quot;; import { IProduct } from &quot;./ProductsData&quot;; import withLoader from &quot;./withLoader&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">interface IProps { products: IProduct[]; search: string;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">const ProductList: React.SFC&lt;IProps&gt; = props =&gt; { const { products, search } = props;</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">return (</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;ul className=&quot;product-list&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 111pt;text-indent: -10pt;line-height: 120%;text-align: left;">{products.map(product =&gt; { if (</p><p class="s12" style="padding-left: 122pt;text-indent: 0pt;line-height: 120%;text-align: left;">!search || (search &amp;&amp;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">product.name.toLowerCase().indexOf(search.toLowerCase()) &gt; -1)</p><p class="s12" style="padding-top: 1pt;padding-left: 111pt;text-indent: 0pt;text-align: left;">) {</p><p class="s12" style="padding-top: 1pt;padding-left: 122pt;text-indent: 0pt;text-align: left;">return (</p><p class="s12" style="padding-top: 1pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;li key={product.id} className=&quot;product-list-item&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 75pt;line-height: 120%;text-align: left;">&lt;Link to={`/products/${product.id}`}&gt;{product.name}&lt;/Link&gt;</p><p class="s12" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;/li&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 122pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 122pt;text-indent: -10pt;line-height: 120%;text-align: left;">} else { return null;</p><p class="s12" style="text-indent: 0pt;text-align: right;">}</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">})}</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">&lt;/ul&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">export default withLoader(ProductList);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">We then can consume this in <span class="s22">ProductPage </span>as follows in its <span class="s22">render </span>method:</p><p class="s12" style="padding-top: 9pt;padding-left: 74pt;text-indent: -5pt;line-height: 120%;text-align: left;">public render() { return (</p><p class="s12" style="padding-left: 74pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;page-container&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">&lt;p&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 5pt;line-height: 120%;text-align: left;">Welcome to React Shop where you can get all your tools for ReactJS!</p><p class="s12" style="padding-left: 74pt;text-indent: 0pt;text-align: left;">&lt;/p&gt;</p><p class="s21" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;line-height: 106%;text-align: left;">&lt;ProductList loading={this.state.loading} products={this.state.products} search={this.state.search}</p><p class="s21" style="padding-left: 74pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">7. Is it possible to create a loader spinner using the children props pattern? So, the consuming JSX would be something like this:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;Loader loading={this.state.loading}&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">The content for my component ...</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;/Loader&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">If so, have a go at implementing it?</p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">Yes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">import * as React from &quot;react&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">interface IProps { loading: boolean;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">const Loader: React.SFC&lt;IProps&gt; = props =&gt; props.loading ? (</p><p class="s12" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;loader-overlay&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;loader-circle-wrap&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 111pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;loader-circle&quot; /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">) : props.children ? (</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;React.Fragment&gt;{props.children}&lt;/React.Fragment&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">) : null;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">export default Loader;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part358.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part360.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
