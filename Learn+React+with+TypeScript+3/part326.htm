<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Working with cached data in Apollo</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part325.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part327.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark886">Working with cached data in Apollo</a></h3><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 92%;text-align: left;">We ended the last section with a bit of a mystery. Why aren&#39;t we getting the up-to-date number of stars in a repository <span class="s22">search </span>after we&#39;ve started it? The answer is that Apollo caches the repository data after the initial <span class="s22">search</span>. When the same query is executed, it gets the results from its cache, rather than getting the data from the GraphQL server.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s double-check that this is the case:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">1. Let&#39;s go to our app and open <b>Developer tools </b>on the <b>Network </b>tab and clear any previous requests:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="557" height="169" alt="image" src="Image_541.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark887">2. Let&#39;s do a search. We&#39;ll see a couple of requests to the GitHub GraphQL server:</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="213" alt="image" src="Image_542.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: justify;">3. Under the <b>Developer tools</b>, <b>Network </b>tab, let&#39;s clear the requests, and then in our app let&#39;s click the <b>Search </b>button again. We&#39;ll see that no network requests will be made, but the data is rendered. So, the data must be coming from a local cache.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;"><a name="bookmark834">So, our </a><span class="s22">ApolloClient </span>that we configured using <span class="s22">apollo-boost </span>automatically caches queries in an in-memory cache. In the next section, we&#39;ll learn how to clear the cache so that our app shows the correct number of stars after a repository has been starred.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part327.htm">Clearing the caching using refetchQueries</a><a class="toc0" href="part328.htm">Updating the cache after a Mutation</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part325.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part327.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
