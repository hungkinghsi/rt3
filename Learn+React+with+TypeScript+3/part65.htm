<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Access modifiers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part64.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part66.htm">Next &gt;</a></p><p class="s24" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark38">Access modifiers</a><a name="bookmark135">&zwnj;</a></p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 92%;text-align: left;">So far, all our class properties and methods have automatically had the <span class="s22">public </span>access modifier. This means they are available to interact with class instances and child classes. We can explicitly set the <span class="s22">public </span>keyword on our class properties and methods immediately before the property or method name:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">class OrderDetail {</p><p class="s21" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">public <span class="s12">product: Product;</span></p><p class="s21" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">public <span class="s12">quantity: number;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">public <span class="s12">getTotal(discount: number): number {</span></p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: 0pt;line-height: 120%;text-align: left;">const priceWithoutDiscount = this.product.unitPrice * this.quantity; const discountAmount = priceWithoutDiscount * discount;</p><p class="s12" style="padding-left: 45pt;text-indent: 0pt;text-align: left;">return priceWithoutDiscount - discountAmount;</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">As you might have guessed, there is another access modifier, called <span class="s22">private</span><b>, </b>which allows the member to only be available to interact with inside the class and not on class instances or child classes.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s look at an example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. Let&#39;s add a <span class="s22">delete </span>method in our <span class="s22">OrderDetail </span>class, which sets a private</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">deleted <span class="p">property:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">class OrderDetail {</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;line-height: 118%;text-align: left;">public product: Product; public quantity: number; <span class="s21">private deleted: boolean;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 112pt;text-indent: -10pt;line-height: 106%;text-align: left;">public delete(): void { this.deleted = true;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;"><a name="bookmark136">}</a></p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Let&#39;s create an instance of <span class="s22">OrderDetail </span>and try to access the <span class="s22">deleted </span>property:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">const orderDetail = new OrderDetail(); orderDetail.deleted = true;</p><p style="text-indent: 0pt;text-align: left;"><span><img width="489" height="85" alt="image" src="Image_084.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="532" height="111" alt="image" src="Image_085.png"/></span></p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">As expected, the compiler complains:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;"><a name="bookmark39">There is a third access modifier, </a><span class="s22">protected</span>, which allows the member to be available to interact with inside the class and on child classes, but not on class instances.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part64.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part66.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
