<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Request HTTP headers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part283.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part285.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark777">Request HTTP headers</a></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">Very often, we need to include HTTP headers in the request. We can specify these in the</p><p class="s22" style="padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">options <span class="p">object in a </span>headers <span class="p">property:</span></p><p class="s12" style="padding-top: 9pt;padding-left: 29pt;text-indent: -5pt;line-height: 120%;text-align: left;">fetch(&quot;https://jsonplaceholder.typicode.com/posts&quot;, { method: &quot;POST&quot;,</p><p class="s21" style="padding-left: 29pt;text-indent: 0pt;line-height: 10pt;text-align: left;">headers: {</p><p class="s21" style="padding-left: 34pt;text-indent: 0pt;line-height: 106%;text-align: left;">&quot;Content-Type&quot;: &quot;application/json&quot;, Authorization: &quot;bearer some-bearer-token&quot;</p><p class="s21" style="padding-left: 34pt;text-indent: 0pt;line-height: 10pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: -10pt;line-height: 120%;text-align: left;">body: JSON.stringify({ title: &quot;Interesting post&quot;,</p><p class="s12" style="padding-left: 45pt;text-indent: 0pt;line-height: 120%;text-align: left;">body: &quot;This is an interesting post about ...&quot;, userId: 1</p><p class="s12" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">})</p><p class="s12" style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">})</p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: -10pt;line-height: 120%;text-align: left;">.then(response =&gt; { console.log(response.status); return response.json();</p><p class="s12" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">})</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">.then(data =&gt; console.log(data));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">Request headers can be used in this way for any HTTP method and not just an HTTP <span class="s22">POST</span>. For example, we can use this for a <span class="s22">GET </span>request as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">fetch(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;, {</p><p class="s21" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">headers: {</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 45pt;text-indent: 0pt;line-height: 106%;text-align: left;"><a name="bookmark778">&quot;Content-Type&quot;: &quot;application/json&quot;, Authorization: &quot;bearer some-bearer-token&quot;</a></p><p class="s21" style="padding-left: 34pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">}).then(...);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;"><a name="bookmark732">So, that&#39;s how to use </a><span class="s22">fetch </span>to post data to a REST API. In the next section, we&#39;ll look at changing data.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part283.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part285.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
