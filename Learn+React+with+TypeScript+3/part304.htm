<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Interacting with GraphQL APIs</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part303.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part305.htm">Next &gt;</a></p><p class="s8" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;"><a name="bookmark811">Interacting with GraphQL APIs</a><a name="bookmark839">&zwnj;</a><a name="bookmark840">&zwnj;</a></p><p style="padding-top: 23pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">GraphQL is an open source web API language for reading and writing data that is maintained by Facebook. It allows the client to specify exactly what data is returned and request multiple data areas in a single request. This efficiency and flexibility makes it a compelling alternative to a REST API. GraphQL also supports both reading and writing data.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">In this chapter, we&#39;ll start by experimenting with some GraphQL queries against GitHub to get familiar with the syntax by using the <i>GitHub GraphQL API </i>explorer. We&#39;ll explore how we both read and write GraphQL data and how to specify exactly the way we want the data in the response returned to us.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;">We&#39;ll then consume the GitHub GraphQL server in a React and TypeScript application to build a little app that searches for a GitHub repository and returns some information about it. We&#39;ll use our knowledge from the last chapter on <span class="s22">axios </span>to interact with the GitHub GraphQL server to start off with. We&#39;ll then switch to using Apollo, which is a client library that makes interacting with GraphQL servers a breeze.</p><p style="padding-top: 7pt;padding-left: 53pt;text-indent: -48pt;text-align: left;">We&#39;ll cover the following topics in this chapter:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_505.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_506.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_507.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_508.png"/></span></p><p style="padding-top: 7pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">GraphQL query and mutation syntax Using axios as a GraphQL client Using Apollo GraphQL client Working with cached data in Apollo</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part305.htm">Technical requirements</a><a class="toc0" href="part306.htm">GraphQL query and mutation syntax</a><a class="toc1" href="part307.htm">Reading GraphQL data</a><a class="toc2" href="part308.htm">Basic query</a><a class="toc2" href="part309.htm">Returning nested data</a><a class="toc2" href="part310.htm">Query parameters</a><a class="toc1" href="part311.htm">Writing GraphQL data</a><a class="toc0" href="part312.htm">Using axios as a GraphQL client</a><a class="toc1" href="part313.htm">Getting a GitHub personal access token</a><a class="toc1" href="part314.htm">Creating our app</a><a class="toc1" href="part315.htm">Querying the GraphQL server</a><a class="toc0" href="part316.htm">Using Apollo GraphQL client</a><a class="toc1" href="part317.htm">Installing Apollo client</a><a class="toc1" href="part318.htm">Migrating from axios to Apollo</a><a class="toc2" href="part319.htm">Adding an Apollo provider</a><a class="toc2" href="part320.htm">Using the query component to query GraphQL</a><a class="toc1" href="part321.htm">Adding a repository search component</a><a class="toc2" href="part322.htm">Implementing the search form</a><a class="toc2" href="part323.htm">Implementing the search query</a><a class="toc2" href="part324.htm">Rendering the search result</a><a class="toc1" href="part325.htm">Implementing a mutation with Apollo</a><a class="toc0" href="part326.htm">Working with cached data in Apollo</a><a class="toc1" href="part327.htm">Clearing the caching using refetchQueries</a><a class="toc1" href="part328.htm">Updating the cache after a Mutation</a><a class="toc0" href="part329.htm">Summary</a><a class="toc0" href="part330.htm">Questions</a><a class="toc0" href="part331.htm">Further reading</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part303.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part305.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
