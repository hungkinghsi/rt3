<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Default prop values</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part137.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part139.htm">Next &gt;</a></p><h4 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark272">Default prop values</a><a name="bookmark333">&zwnj;</a><a name="bookmark334">&zwnj;</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Default values can be added to component props when the component is initialized. These can be implemented using a static object literal called <span class="s22">defaultProps</span>.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s make use of this feature in our <span class="s22">Confirm </span>component, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Create some default values for <span class="s22">cancelCaption </span>and <span class="s22">okCaption </span>in our class:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 32pt;text-indent: 0pt;text-align: center;">class Confirm extends React.Component&lt;IProps&gt; {</p><p class="s21" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 106%;text-align: left;">public static defaultProps = { cancelCaption: &quot;Cancel&quot;, okCaption: &quot;Okay&quot;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;line-height: 10pt;text-align: left;">};</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">public render() { ... }</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">If we look at our running app again, we have button captions once more.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Let&#39;s finish this section by overriding the defaults, and supplying specific attributes for these captions in <span class="s22">App.tsx</span>, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;Confirm</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">title=&quot;React and TypeScript&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">content=&quot;Are you sure you want to learn React and TypeScript?&quot;</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;line-height: 106%;text-align: left;">cancelCaption=&quot;No way&quot; okCaption=&quot;Yes please!&quot;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">/&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">Our running app should now look like the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 105pt;text-indent: 0pt;text-align: left;"><span><img width="303" height="125" alt="image" src="Image_169.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark335">Optional props with default values can make components easier to consume, because the most common configurations can be automatically set up without needing to specify anything.</a></p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;"><a name="bookmark273">So, our </a><span class="s22">Confirm </span>component is nice and flexible now, but the buttons don&#39;t do anything yet. We&#39;ll tackle this in the following sections.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part137.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part139.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
