<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Class component states</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="bookmark344">Class component states</a></h3><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">State is an object that determines how the component behaves and renders. We need to introduce state into our app, in order to manage whether our confirmation dialog is open or closed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">This particular state is going to live and be managed within the <span class="s22">App </span>component, and be passed in as a prop to the <span class="s22">Confirm </span>component.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. First, create an <span class="s22">open </span>prop in the <span class="s22">Confirm </span>component by adding it to its props interface:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 114%;text-align: left;">interface IProps { <span class="s21">open: boolean; </span>title: string; content: string;</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">cancelCaption?: string; okCaption?: string; onOkClick: () =&gt; void; onCancelClick: () =&gt; void;</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. We&#39;re going to use the <span class="s22">open </span>prop in the <span class="s22">render </span>function to determine whether the dialog is visible or not. The <span class="s22">confirm-visible </span>CSS class makes</p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 13pt;text-align: left;">the dialog visible.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">So, on the outermost <span class="s22">div</span>, let&#39;s use a JavaScript ternary expression in the <span class="s22">className </span>attribute to only include <span class="s22">confirm-visible </span>when the <span class="s22">open </span>prop is <span class="s22">true</span>, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">public render() { return (</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;div</p><p class="s12" style="padding-top: 1pt;padding-left: 134pt;text-indent: -10pt;line-height: 106%;text-align: left;">className=<span class="s21">{ this.props.open</span></p><p class="s21" style="padding-left: 145pt;text-indent: 0pt;line-height: 10pt;text-align: left;">? &quot;confirm-wrapper confirm-visible&quot;</p><p class="s21" style="padding-left: 145pt;text-indent: 0pt;text-align: left;">: &quot;confirm-wrapper&quot;</p><p class="s21" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">We now have a compilation error in <span class="s22">App.tsx </span>because we haven&#39;t specified the</p><p class="s22" style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">open <span class="p">attribute where we use </span>Confirm<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><a name="bookmark345">3. Before we start to create and manage state within </a><span class="s22">App.tsx</span>, let&#39;s simply pass</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">false <span class="p">in the </span>open <span class="p">attribute in </span>Confirm<span class="p">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;Confirm</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">open={false}</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">title=&quot;React and TypeScript&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 10pt;line-height: 120%;text-align: left;">content=&quot;Are you sure you want to learn React and TypeScript?&quot;</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">cancelCaption=&quot;No way&quot; okCaption=&quot;Yes please!&quot;</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">onCancelClick={this.handleCancelConfirmClick} onOkClick={this.handleOkConfirmClick}</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">/&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark278">If we look at the app in the browser now, the compilation error will have disappeared, and our confirmation dialog will be closed.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part144.htm">Defining state type</a><a class="toc0" href="part145.htm">Initializing the state</a><a class="toc0" href="part146.htm">Changing state</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
