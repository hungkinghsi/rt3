<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>getSnapshotBeforeUpdate and componentDidUpdate</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part150.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part152.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark285">getSnapshotBeforeUpdate and componentDidUpdate</a><a name="bookmark359">&zwnj;</a></h4><p class="s22" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">getSnapshotBeforeUpdate <span class="p">is called just before the DOM is updated. The value that is returned from </span>getSnapshotBeforeUpdate <span class="p">is passed on to </span>componentDidUpdate<span class="p">.</span></p><p class="s22" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">componentDidUpdate <span class="p">is called as soon as the DOM is updated. Resizing the window during rendering is an example of when </span>getSnapshotBeforeUpdate <span class="p">can be useful.</span></p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s have a look at these life cycle methods in our app:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. Let&#39;s add the following near the top of the <span class="s22">App </span>class, under the <span class="s22">timer </span>variable declaration:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">private renderCount = 0;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Now, let&#39;s add the life cycle methods:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">public getSnapshotBeforeUpdate(prevProps: {}, prevState: IState) {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">this.renderCount += 1; console.log(&quot;getSnapshotBeforeUpdate&quot;, prevProps, prevState,</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">renderCount: this.renderCount</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">});</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">return this.renderCount;</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">public componentDidUpdate(prevProps: {}, prevState: IState, snapshot: number) {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">console.log(&quot;componentDidUpdate&quot;, prevProps, prevState, snapshot, {</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">renderCount: this.renderCount</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">});</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">Look at the running app:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="283" alt="image" src="Image_190.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">We see the methods being invoked in the order we expect, and <span class="s22">componentDidUpdate </span>successfully taking in the render count from <span class="s22">getSnapshotBeforeUpdate</span>.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part150.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part152.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
