<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using fireEvent for user interaction</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part342.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part344.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark936">Using fireEvent for user interaction</a></p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We are now going to switch to depending on the native event system, rather than React&#39;s event system which sits on top of it. This gets us closer to testing what happens when users are using our app, and increases our confidence in our test:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. Let&#39;s start by adding the <span class="s22">fireEvent </span>function to the import statement from</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">react-testing-library<span class="p">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">import { render, cleanup, <span class="s21">fireEvent </span>} from &quot;react-testing-library&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. We are going to add the <span class="s22">getByText </span>function to the destructured variables from the call to the <span class="s22">render </span>function:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">const { getAllByText, <span class="s21">getByText </span>} = render(</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;ContactUs onSubmit={handleSubmit} /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We can also remove the destructured <span class="s22">container </span>variable, as that won&#39;t be needed anymore.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">3. We can then use this function to get a reference to the <b>Submit </b>button. After that, we can use the <span class="s22">fireEvent </span>function we imported to click the button:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">const { getAllByText, getByText } = render(</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;ContactUs onSubmit={handleSubmit} /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">const submitButton = getByText(&quot;Submit&quot;); fireEvent.click(submitButton);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;"><a name="bookmark937">const errorSpans = getAllByText(&quot;This must be populated&quot;); expect(errorSpans.length).toBe(2);</a></p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;line-height: 157%;text-align: left;">The previous code that referenced the <span class="s22">form </span>tag has now been removed. When the test runs, it still passes.</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark907">So, our test references items that the user sees, rather than implementation details, and is far less likely to unexpectedly break.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part342.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part344.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
