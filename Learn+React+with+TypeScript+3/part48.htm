<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Enumerations</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part47.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part49.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark95">Enumerations</a></h4><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: justify;">Enumerations allow us to declare a meaningful set of friendly names that a variable can be set to. We use the <span class="s22">enum </span>keyword, followed by the name we want to give to it, followed by the possible values in curly braces.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">Here&#39;s an example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Let&#39;s declare an <span class="s22">enum </span>for order statuses in the TypeScript playground:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">enum OrderStatus { Paid,</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">Shipped, Completed, Cancelled</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. If we look at the transpiled JavaScript, we see that it looks very different:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">var OrderStatus; (function (OrderStatus) {</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">OrderStatus[OrderStatus[&quot;Paid&quot;] = 1] = &quot;Paid&quot;; OrderStatus[OrderStatus[&quot;Shipped&quot;] = 2] = &quot;Shipped&quot;; OrderStatus[OrderStatus[&quot;Completed&quot;] = 3] = &quot;Completed&quot;; OrderStatus[OrderStatus[&quot;Cancelled&quot;] = 4] = &quot;Cancelled&quot;;</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">})(OrderStatus || (OrderStatus = {}));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">This is because enumerations don&#39;t exist in JavaScript, so the TypeScript compiler is transpiling the code into something that does exist.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Let&#39;s declare a <span class="s22">status </span>variable, setting the value to the <span class="s22">shipped </span>status:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">let status = OrderStatus.Shipped;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;"><a name="bookmark96">Notice how we get nice IntelliSense when typing the value:</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"><span><img width="497" height="167" alt="image" src="Image_064.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">4. By default, the numerical values start from <span class="s22">0 </span>and increment. However, the starting value can be explicitly declared in the <span class="s22">enum</span>, as in the following example, where we set <span class="s22">Paid </span>to <span class="s22">1</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 115%;text-align: left;">enum OrderStatus { Paid <span class="s21">= 1</span>, Shipped, Completed, Cancelled</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. Let&#39;s set our <span class="s22">status </span>variable to the shipped status and log this to the console:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">let status = OrderStatus.Shipped; console.log(status);</p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">If we run the program, we should see <b>2 </b>output in the console:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 45pt;text-indent: 0pt;text-align: left;"><span><img width="463" height="150" alt="image" src="Image_065.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark97">6. In addition, all the values can be explicitly declared, as in the following example:</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 115%;text-align: left;">enum OrderStatus { Paid <span class="s21">= 1</span>,</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Shipped <span class="s21">= 2</span>,</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">Completed <span class="s21">= 3</span>,</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">Cancelled <span class="s21">= 0</span></p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark22">Enumerations are great for data such as a status that is stored as a specific set of integers but actually has some business meaning. They make our code more readable and less prone to error.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part47.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part49.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
