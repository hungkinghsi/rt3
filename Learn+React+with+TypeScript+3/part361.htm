<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Chapter 8: React Redux</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part360.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part362.htm">Next &gt;</a></p><h3 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark963">Chapter 8: React Redux</a><a name="bookmark975">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. Is the <span class="s22">type </span>property in action objects required? And does this property need to be called <span class="s22">type</span>? Can we call it something else?</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">The <span class="s22">type </span>property is required in the action objects and must be called <span class="s22">type</span>.</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. How many properties can the action object contain?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">As many as we like! It needs to include at least one for the <span class="s22">type </span>property. It can then include as many other properties as we need in order for the reducer to change the state but this is generally lumped in one additional property. So, generally an action will have one or two properties.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. What is an action creator?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">An action creator is a function that returns an action object. Components invoke these functions in order to make a change to the state in the store.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. Why did we need Redux Thunk in our Redux store in our React shop app?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">By default, a Redux store can&#39;t manage asynchronous action creators. Middleware needs to be added to the Redux store in order to facilitate asynchronous action creators. Redux Thunk is the middleware we added to do this.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. Could we have used something else other than Redux Thunk?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">Yes! We could have created our own middleware. There are other well- established libraries that we could have used as well, such as Redux Saga.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. In our <span class="s22">basketReducer </span>we have just implemented, why didn&#39;t we just use the <span class="s22">push </span>function to add the item to the basket state? What is wrong with the highlighted line?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">export const basketReducer: Reducer&lt;IBasketState, BasketActions&gt; = (</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;line-height: 120%;text-align: left;">state = initialBasketState, action</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">) =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">switch (action.type) {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">case BasketActionTypes.ADD: {</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">state.products.push(action.product);</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">return state || initialBasketState;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark964">This mutates the product&#39;s state directly and makes the function impure. This is because we have changed the state argument, which lives outside the scope of our function. Breaking this rule, in this case, results in the basket summary not incrementing on the rendered page when the </a><b>Add to basket </b>button is clicked.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part360.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part362.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
