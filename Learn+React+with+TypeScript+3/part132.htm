<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Creating start and build scripts</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part131.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part133.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark266">Creating start and build scripts</a><a name="bookmark320">&zwnj;</a><a name="bookmark321">&zwnj;</a></p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">We are going to leverage <span class="s22">npm </span>scripts to start our app in development mode, and also to build a production version of our app:</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: justify;">1. Let&#39;s open up <span class="s22">package.json</span><span class="s23">â€”</span>there should be quite a bit of content in there now. We need to find the <span class="s22">scripts </span>section, which will probably have a single script called <span class="s22">test </span>in place. Add the highlighted scripts for <span class="s22">start </span>and <span class="s22">build</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&quot;scripts&quot;: {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;line-height: 111%;text-align: left;">&quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot; <span class="s21">&quot;start&quot;: &quot;webpack-dev-server --env development&quot;, &quot;build&quot;: &quot;webpack --env production&quot;</span></p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 9pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">..</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Run the following command, which produces a production version of our app:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npm run build</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 92%;text-align: left;">Now, webpack will kick in and do its stuff. If we look in the <span class="s22">dist </span>folder, eventually a file called <span class="s22">bundle.js </span>will appear. This file contains all the JavaScript minified code, including code from the React library and our simple React component.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Now, enter the following command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">npm start</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">The webpack development server will start.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. If we browse to <span class="s22">http://localhost:9000/ </span>we&#39;ll see our web app:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 129pt;text-indent: 0pt;text-align: left;"><span><img width="239" height="115" alt="image" src="Image_155.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;"><a name="bookmark322">5. With our app still running, in </a><span class="s22">index.tsx</span>, let&#39;s change our <span class="s22">App </span>component to the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">const App: React.SFC = () =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">return &lt;h1&gt;My React <span class="s21">and TypeScript </span>App!&lt;/h1&gt;;</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. If we save <span class="s22">index.tsx </span>and go to the browser, we&#39;ll see that our app automatically updates with the new content:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><span><img width="341" height="126" alt="image" src="Image_156.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;"><a name="bookmark267">We&#39;ll leave our manually-configured project there. It doesn&#39;t do as much as the </a><span class="s22">create- react-app </span>project, but we have started to gain an understanding of how React and TypeScript projects are packaged up.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part131.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part133.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
