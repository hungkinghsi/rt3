<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Completing Tabs with render props</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part209.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part211.htm">Next &gt;</a></p><h4 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark509">Completing Tabs with render props</a><a name="bookmark542">&zwnj;</a><a name="bookmark543">&zwnj;</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We are going to complete our Tabs component now by using the render props pattern. Before we implement our first render prop, let&#39;s think about how we want the</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">consumer to consume our <span class="s22">Tabs </span>component when it has been completed. The following JSX is how we would ideally consume the <span class="s22">Tabs </span>component from the <span class="s22">Product </span>component:</p><p class="s12" style="padding-top: 9pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">&lt;Tabs&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: -10pt;line-height: 120%;text-align: left;">&lt;Tabs.Tab name=&quot;Description&quot; initialActive={true}</p><p class="s12" style="padding-left: 45pt;text-indent: 0pt;text-align: left;">heading={() =&gt; &lt;b&gt;Description&lt;/b&gt;}</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: 0pt;text-align: left;">&lt;p&gt;{product.description}&lt;/p&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">&lt;/Tabs.Tab&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 45pt;text-indent: -10pt;line-height: 120%;text-align: left;">&lt;Tabs.Tab name=&quot;Reviews&quot;</p><p class="s12" style="padding-left: 45pt;text-indent: 0pt;text-align: left;">heading={() =&gt; &quot;Reviews&quot;}</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 45pt;text-indent: 0pt;text-align: left;">&lt;ul className=&quot;product-reviews&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 56pt;text-indent: 0pt;text-align: left;">{product.reviews.map(review =&gt; (</p><p class="s12" style="padding-top: 1pt;padding-left: 66pt;text-indent: 0pt;text-align: left;">&lt;li key={review.reviewer}&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 77pt;text-indent: 0pt;text-align: left;">&lt;i&gt;&quot;{review.comment}&quot;&lt;/i&gt; - {review.reviewer}</p><p class="s12" style="padding-top: 1pt;padding-left: 66pt;text-indent: 0pt;text-align: left;">&lt;/li&gt;</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">))}</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">&lt;/ul&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">&lt;/Tabs.Tab&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">&lt;/Tabs&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s go through the steps of the key parts in this:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_321.png"/></span></p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: 0pt;line-height: 89%;text-align: justify;">We are still using compound components. Render props work perfectly fine with these components.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_322.png"/></span></p><p style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;line-height: 94%;text-align: justify;">The heading for each tab is no longer defined in the child of the <span class="s22">Tab </span>component. Instead, we use a <span class="s22">heading </span>render prop where we can still render a simple string or richer content.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_323.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: justify;">The tab content is then specified as the child of the <span class="s22">Tab </span>component.</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part211.htm">Using render prop for tab headings</a><a class="toc0" href="part212.htm">Using children prop for tab content</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part209.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part211.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
