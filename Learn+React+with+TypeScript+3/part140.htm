<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Basic event handlers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark337">Basic event handlers</a></h4><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_170.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">We can see a list of all the available events with their corresponding types in the <span class="s22">index.d.ts </span>file in the <span class="s22">node_modules/@types/react </span>folder.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: justify;">All the native JavaScript events are available for us to handle in JSX. JSX allows us to do this with props that call functions. The prop name is derived by prefixing the native event name with <span class="s22">on</span>, using camel case. So the prop name for the <span class="s22">click </span>event is <span class="s22">onClick </span>in JSX.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">We need to be able to control what the buttons do in our <span class="s22">Confirm </span>component. Follow these steps:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. The first step is handling the <span class="s22">click </span>events on those buttons. Let&#39;s set the</p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><span class="s22">onClick </span>prop on the <b>Okay </b>button, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;button className=&quot;confirm-ok&quot;</p><p class="s21" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">onClick={this.handleOkClick}<span class="s12">&gt;...&lt;/button&gt;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">So, we&#39;re telling the button to call a <span class="s22">handleOkClick </span>method within our <span class="s22">Confirm</span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">class when it is clicked.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Next, let&#39;s create the <span class="s22">handleOkClick </span>method:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">private handleOkClick() { console.log(&quot;Ok clicked&quot;);</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark338">Switch to the browser with our app running, and click the </a><b>Yes please! </b>button. If we look in the console, we should see <b>Ok clicked </b>displayed:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="33" alt="image" src="Image_171.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: justify;"><a name="bookmark275">As we can see, it is pretty straightforward to handle events, using mechanisms we are already familiar with. There is actually a problem with our </a><span class="s22">handleOkClick </span>method, though. We&#39;ll drill into this and resolve the issue in the next section.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
