<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Adding an Apollo provider</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part318.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part320.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark869">Adding an Apollo provider</a></p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">We are going to start in <span class="s22">App.tsx</span>, where we will define our Apollo client and <i>provide </i>it to all the components beneath the <span class="s22">App </span>in the component hierarchy:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. In <span class="s22">App.tsx</span>, let&#39;s import <span class="s22">apollo-boost</span>, along with the <span class="s22">ApolloProvider</span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">component from <span class="s22">react-apollo</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">import ApolloClient from &quot;apollo-boost&quot;; import { ApolloProvider } from &quot;react-apollo&quot;;</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Just above the <span class="s22">App </span>class component, let&#39;s create our <span class="s22">ApolloClient</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">const client = new ApolloClient({</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">uri: &quot;https://api.github.com/graphql&quot;, headers: {</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">authorization: `Bearer our-bearer-token`</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">}</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">Obviously, we need to substitute in our real bearer token we obtained earlier from GitHub.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">3. The last step is to use the <span class="s22">ApolloProvider </span>component to provide the <span class="s22">ApolloClient </span>we have created to all the other components in our app. We do this by putting <span class="s22">ApolloProvider </span>as the root component and passing it our <span class="s22">ApolloClient </span>object:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">public render() { return (</p><p class="s21" style="padding-left: 112pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&lt;ApolloProvider client={client}&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">&lt;div className=&quot;App&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;text-align: center;">&lt;header className=&quot;App-header&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">&lt;Header /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">&lt;/header&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: center;">&lt;/div&gt;</p><p class="s21" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;/ApolloProvider&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark870">Now that the </a><span class="s22">ApolloClient </span>is set up, we can start interacting with the GraphQL server.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part318.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part320.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
