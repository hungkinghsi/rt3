<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Defining state type</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part143.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part145.htm">Next &gt;</a></p><h4 style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark346">Defining state type</a></h4><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">Let&#39;s create a state in <span class="s22">App.tsx</span>, and properly manage whether the confirmation dialog is open or closed:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. First, let&#39;s create an interface for the state above the <span class="s22">App </span>class:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 96pt;text-indent: -5pt;line-height: 120%;text-align: left;">interface IState { confirmOpen: boolean;</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. We then tell the <span class="s22">App </span>component about the state type, which we can do using the second generic parameter of <span class="s22">React.Component</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_176.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We have used <span class="s22">{} </span>as the props type because there are no props for this component.</p><p style="text-indent: 0pt;text-align: left;"/><p class="s12" style="padding-left: 21pt;text-indent: 0pt;text-align: center;">class App extends React.Component&lt;<span class="s21">{}, IState</span>&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part143.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part145.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
