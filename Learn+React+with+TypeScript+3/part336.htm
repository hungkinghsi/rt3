<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Understanding Jest watch options</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part335.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part337.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark924">Understanding Jest watch options</a></h4><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">After Jest executes our tests, it provides us with the following options:</p><p class="s21" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press f to run only failed tests.</p><p class="s21" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press o to only run tests related to changed files.</p><p class="s21" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press p to filter by a filename regex pattern.</p><p class="s21" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press t to filter by a test name regex pattern.</p><p class="s21" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press q to quit watch mode.</p><p class="s21" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">&gt; Press Enter to trigger a test run.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">These options let us specify what tests should be executed, which is really useful as the number of tests grows. Let&#39;s explore some of these options:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">1. If we press <i>F</i>, Jest will execute only the tests that have failed. In our code, we get confirmation that we have no failing tests:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;"><span><img width="290" height="70" alt="image" src="Image_569.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Let&#39;s press <i>F </i>to exit this option and take us back to all the options that are available.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 91%;text-align: left;"><a name="bookmark925">3. Now, let&#39;s press </a><i>P</i>. This allows us to test a specific file or a collection of files with names matching a regular expression pattern. Let&#39;s enter <span class="s22">form </span>when prompted for the filename pattern:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="345" height="69" alt="image" src="Image_570.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="360" height="85" alt="image" src="Image_571.png"/></span></p><p style="padding-top: 2pt;padding-left: 58pt;text-indent: 0pt;text-align: left;">Our test in <span class="s22">Form.test.tsx </span>will then be executed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">4. We are going to leave the filename filter on and press <i>T</i>. This will allow us to add an additional filter by test name. Let&#39;s enter <span class="s22">required</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 105pt;text-indent: 0pt;text-align: left;"><span><img width="300" height="99" alt="image" src="Image_572.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 55pt;text-indent: 0pt;text-align: left;">Our test on the <span class="s22">required </span>function will then be executed.</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. To clear the filters, we can press <i>C</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_573.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 13pt;text-align: left;">If we receive an error<span class="s23">â€”</span><b>watch is not supported without git/hg, please use</b></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;"><b>--watchAll, </b>this will be because our project isn&#39;t in a Git repository. We can resolve the issue by entering the <span class="s22">git init </span>command in the Terminal.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark900">We have a good handle on the options available to execute our tests now.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part335.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part337.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
