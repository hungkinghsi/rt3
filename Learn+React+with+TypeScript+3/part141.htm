<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The this problem</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part140.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part142.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="bookmark339">The this problem</a></h4><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: justify;">Our event handler suffers from JavaScript&#39;s classic <span class="s22">this </span>problem. We aren&#39;t currently referencing <span class="s22">this </span>in our event handler, which is why the problem hasn&#39;t surfaced yet.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">Let&#39;s expose the problem with the <span class="s22">handleOkClick </span>method, so that we can better understand what&#39;s happening:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Log the component props to the console:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 115%;text-align: left;">private handleOkClick() { console.log(&quot;Ok clicked&quot;, <span class="s21">this.props</span>);</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 8pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="525" height="175" alt="image" src="Image_172.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="569" height="195" alt="image" src="Image_173.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">Now, try clicking the <b>Yes please! </b>button again. The following error appears:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><a name="bookmark340">The problem is that </a><span class="s22">this </span>doesn&#39;t reference our class in the event handler<span class="s23">—</span>it is</p><p class="s22" style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">undefined <span class="p">instead.</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_174.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 92%;text-align: left;">Arrow function expressions have shorter syntax than function expressions. They also don&#39;t create their own <span class="s22">this</span><span class="s23">—</span>so they are a great solution to the <span class="s22">this </span>problem.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">One solution is to change the <span class="s22">handleOkClick </span>method to be an arrow function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Let&#39;s convert our method to an arrow function, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 96pt;text-indent: -5pt;line-height: 120%;text-align: left;">private handleOkClick = () =&gt; { console.log(&quot;Ok clicked&quot;, this.props);</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">Now try clicking the <b>Yes please! </b>button again. We should see props successfully output to the console.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">3. Moving on, let&#39;s implement a click handler on the <b>Cancel </b>button now. First, we need to reference a handler on the <b>Cancel </b>button&#39;s <span class="s22">onClick </span>prop:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;button className=&quot;confirm-cancel&quot;</p><p class="s21" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">onClick={this.handleCancelClick}<span class="s12">&gt;...&lt;/button&gt;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;">4. Now we&#39;ll create the <span class="s22">handleCancelClick </span>arrow function:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">private handleCancelClick = () =&gt; { console.log(&quot;Cancel clicked&quot;, this.props);</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">To summarize, in order to avoid the <span class="s22">this </span>problem, we can use arrow functions to implement event handlers.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Next, we want the consumer of the component to be able to execute some logic when the buttons are clicked. We&#39;ll cover how to do this in the next section.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part140.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part142.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
