<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Chapter 9: Interacting with RESTful APIs</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part361.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part363.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark976">Chapter 9: Interacting with RESTful APIs</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. What will the output be in the console if we run the following code in a browser?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">try {</p><p class="s12" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">setInterval(() =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">throw new Error(&quot;Oops&quot;);</p><p class="s12" style="padding-top: 1pt;padding-left: 74pt;text-indent: 0pt;text-align: left;">}, 1000);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">} catch (ex) {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">console.log(&quot;Sorry, there is a problem&quot;, ex);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We&#39;d get a message saying that an uncaught error (Oops) has occurred. <span class="s22">The console.log </span>statement wouldn&#39;t be reached.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Assuming that post 9999 doesn&#39;t exist, what would be the output in the console if we ran the following code in a browser:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">fetch(&quot;https://jsonplaceholder.typicode.com/posts/9999&quot;)</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.then(response =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;line-height: 120%;text-align: left;">console.log(&quot;HTTP status code&quot;, response.status); return response.json();</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">})</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.then(data =&gt; console.log(&quot;Response body&quot;, data))</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.catch (error =&gt; console.log(&quot;Error&quot;, error));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="98" alt="image" src="Image_618.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">The key thing is that an HTTP error doesn&#39;t get handled in the <span class="s22">catch </span>method with the <span class="s22">fetch </span>function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">3. If we did a similar exercise with <span class="s22">axios</span>, what would be the output in the console when running the following code?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">axios</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.get(&quot;https://jsonplaceholder.typicode.com/posts/9999&quot;)</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.then(response =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">console.log(&quot;HTTP status code&quot;, response.status);</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">})</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">.catch(error =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">console.log(&quot;Error&quot;, error.response.status);</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="66" alt="image" src="Image_619.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">The key thing is that an HTTP error does get handled in the <span class="s22">catch </span>method with</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">axios<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. What is a benefit of using the native <span class="s22">fetch </span>over <span class="s22">axios</span>?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: justify;">If we are targeting modern browsers (and not IE) and only require simple REST API interaction then <span class="s22">fetch </span>is arguably more favorable than <span class="s22">axios </span>because our code isn&#39;t dependent on third-party code.  It will also probably run a little faster because there is less non-native code being executed.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. How can we add a bearer token to the following <span class="s22">axios </span>request?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">axios.get(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. The second parameter is an object literal that has a <span class="s22">header </span>property that can contain HTTP headers for the request:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">axios</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: -10pt;line-height: 120%;text-align: left;">.get(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;, { headers: {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&quot;Authorization&quot;: `Bearer ${token}`</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">}</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">7. We are using the following <span class="s22">axios PUT </span>request to update a post title:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">axios.put(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;, { title: &quot;corrected title&quot;,</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">body: &quot;some stuff&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">The body hasn&#39;t changed though <span class="s23">â€“ </span>it&#39;s just the title we want to update. How can we change this to a <span class="s22">PATCH </span>request to make this REST call more efficient?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">axios.patch(&quot;https://jsonplaceholder.typicode.com/posts/1&quot;, { title: &quot;corrected title&quot;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">8. We have implemented a function component to display a post. It uses the following code to get the post from a REST API:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">React.useEffect(() =&gt; { axios</p><p class="s12" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">.get(`https://jsonplaceholder.typicode.com/posts/${id}`)</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">.then(...)</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">.catch(...);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">What is wrong with the preceding code?</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">The second parameter in the <span class="s22">useEffect </span>function is missing, which means the REST API will be called every time the component is rendered. An empty array should be supplied as the second parameter so that the REST API is only called on the first render:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">React.useEffect(() =&gt; { axios</p><p class="s12" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">.get(`https://jsonplaceholder.typicode.com/posts/${id}`)</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">.then(...)</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">.catch(...);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}, <span class="s21">[]</span>);</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part361.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part363.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
