<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Spread expressions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part100.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part102.htm">Next &gt;</a></p><h4 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark191">Spread expressions</a><a name="bookmark220">&zwnj;</a><a name="bookmark221">&zwnj;</a></h4><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 152%;text-align: left;">TypeScript 3 allows us to use tuples with spread expressions. Let&#39;s look at an example:</p><p style="padding-top: 1pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">1. Let&#39;s go back to the problematic pure JavaScript example we looked at for using the <span class="s22">spread </span>syntax:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">function logScore(score1, score2, score3) { console.log(score1 + &quot;, &quot; + score2 + &quot;, &quot; + score3);</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 240%;text-align: left;">const scores = [75, 65, 80]; logScore(...scores);</p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 10pt;text-align: left;">The TypeScript compiler raised the error <span class="s22">Expected 3 arguments, but got 0</span></p><p class="s22" style="padding-left: 50pt;text-indent: 0pt;line-height: 14pt;text-align: left;">or more<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Let&#39;s resolve this now with enhanced tuples in TypeScript 3. We&#39;ll start by adding types to the <span class="s22">function </span>parameters:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">function logScore(score1<span class="s21">: number</span>, score2<span class="s21">: number</span>, score3<span class="s21">: number</span>) {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">console.log(score1, score2, score3);</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: center;">There&#39;s nothing new yet, and we&#39;re still getting the compilation error.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Let&#39;s change the <span class="s22">scores </span>variable into a fixed tuple:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 4pt;padding-left: 35pt;text-indent: 0pt;text-align: center;">const scores: <span class="s21">[number, number, number] </span>= [75, 65, 80];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: justify;">That&#39;s it <span class="s23">â€“ </span>the compilation error has gone! All we needed to do was tell the compiler how many items were in <span class="s22">scores </span>for it to successfully spread into the <span class="s22">logScore </span>function.</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">So, in TypeScript 3, we can spread into fixed tuples. What about open-ended tuples? Let&#39;s give that a try:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;line-height: 216%;text-align: left;">const scoresUnlimited: [<span class="s21">...number[]</span>] = [75, 65, 80]; logScore(...scoresUnlimited);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark222">Unfortunately, the compiler is not yet quite clever enough to let us do this. We get the compilation error Expected 3 arguments, but got 0 or more.:</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 13pt;text-indent: 0pt;text-align: left;"><span><img width="549" height="150" alt="image" src="Image_121.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part100.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part102.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
