<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Initializing the state</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part144.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part146.htm">Next &gt;</a></p><h4 style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark279">Initializing the state</a><a name="bookmark347">&zwnj;</a><a name="bookmark348">&zwnj;</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Now that we have specified that our component has a state, we need to initialize it. We initialize component state in the class constructor.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Let&#39;s create a constructor, and initialize the <span class="s22">confirmOpen </span>state to be <span class="s22">true</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 96pt;text-indent: -5pt;line-height: 120%;text-align: left;">constructor(props: {}) { super(props); this.state = {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">confirmOpen: true,</p><p class="s12" style="padding-top: 1pt;padding-left: 96pt;text-indent: 0pt;text-align: left;">};</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">We call <span class="s22">super </span>because our class extends <span class="s22">React.Component</span>.</p><p style="padding-top: 9pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">The state is held in a private prop in a component class. In the constructor, we can set the state to our required object literal, which in our case has <span class="s22">confirmOpen </span>set to <span class="s22">true</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. We can then use this state when we reference the <span class="s22">Confirm </span>component:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;Confirm</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">open={this.state.confirmOpen}</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">/&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">If we look at our running app, the confirmation dialog should be open again.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark280">So, a private state prop gives us access to the component state, and we can initialize this in the class constructor.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part144.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part146.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
