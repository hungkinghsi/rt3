<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using future JavaScript features</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part39.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part41.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark79">Using future JavaScript features</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">There is another benefit of TypeScript that is important to understand. TypeScript allows us to use some features in JavaScript that haven&#39;t yet been adopted by all browsers but still target those browsers. TypeScript achieves this by transpiling the use of these features down to JavaScript code that the targeted browser does support.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">As an example, let&#39;s look at the exponentiation operator (<span class="s22">**</span>) in ES7, which isn&#39;t supported in IE. Let&#39;s create a file called <span class="s22">future.ts </span>and enter the following code:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;line-height: 120%;text-align: left;">var threeSquared: number = 3 ** 2; console.log(threeSquared);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">When we run the program in a browser, it should put <span class="s22">9 </span>into the console. Before we do that, let&#39;s run the code against the TypeScript compiler to get the transpiled JavaScript. Run the following command in a terminal in the same directory as <span class="s22">future.ts</span>:</p><p class="s21" style="padding-top: 9pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">tsc future</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="bookmark80">This should generate a file called </a><span class="s22">future.js </span>with the following content:</p><p class="s12" style="padding-top: 9pt;padding-left: 23pt;text-indent: 0pt;line-height: 120%;text-align: left;">var threeSquared = Math.pow(3, 2); console.log(threeSquared);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: justify;">So, TypeScript converted the exponentiation operator to a call to the <span class="s22">Math.pow </span>function, which is supported in IE. To confirm that this works, paste the generated JavaScript code into the console in IE and the output should be <span class="s22">9</span>.</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;"><a name="bookmark14">This example is purposely simple but probably not that useful. </a><span class="s22">Async/await</span>, <b>spread </b>operators, <b>rest </b>parameters, and <b>arrow functions </b>are far more useful features that IE doesn&#39;t support but TypeScript allows the use of. Don&#39;t worry if you don&#39;t know what the features in the last sentence are, as we&#39;ll cover them when we need them in the book.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part39.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part41.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
