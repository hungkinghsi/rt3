<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using create-react-app</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part119.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part121.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark301">Using create-react-app</a></h4><p class="s22" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">create-react-app <span class="p">is a command-line tool that we can use to quickly create a React and TypeScript app with lots of useful pieces.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Open Visual Studio Code in an empty folder of your choice. Let&#39;s create an app using this tool:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. We use the <span class="s22">create-react-app npm </span>package to create a React and TypeScript project by entering the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npx create-react-app my-react-ts-app --typescript</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">npx </span>tool temporarily installs the <span class="s22">create-react-app npm </span>package and uses it to create our project.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We chose to call our project <span class="s22">my-react-ts-app</span>. We also specified <span class="s22">-- typescript</span>, which is the bit that tells the tool to set the project up with TypeScript.</p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">The tool will take a minute or so to create your project.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">Note that the version of React we use needs to be at least version <span class="s22">16.7.0- alpha.0</span>. We can check this in the <span class="s22">package.json </span>file. If the version of React in <span class="s22">package.json </span>is less that <span class="s22">16.7.0-alpha.0 </span>then we can install this version using the following command:</p><p style="padding-top: 8pt;padding-left: 91pt;text-indent: 0pt;text-align: left;"><a href="mailto:react@16.7.0-alpha.0" class="s26" target="_blank">npm install react@16.7.0-alpha.0</a></p><p style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a href="mailto:react-dom@16.7.0-alpha.0" class="s26" target="_blank">npm install react-dom@16.7.0-alpha.0</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. When the project is created, add TSLint as a development dependency, along with some rules that work well with React and Prettier:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">cd my-react-ts-app</p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">npm install tslint tslint-react tslint-config-prettier --save- dev</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Now add a <span class="s22">tslint.json </span>file, containing some rules:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 107pt;text-indent: -5pt;line-height: 120%;text-align: left;">&quot;extends&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-react&quot;, &quot;tslint- config-prettier&quot;],</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&quot;rules&quot;: {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&quot;ordered-imports&quot;: false,</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">&quot;object-literal-sort-keys&quot;: false, &quot;no-debugger&quot;: false,</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">&quot;no-console&quot;: false,</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">&quot;linterOptions&quot;: { &quot;exclude&quot;: [</p><p class="s12" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">&quot;config/**/*.js&quot;,</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 123pt;text-indent: 0pt;line-height: 120%;text-align: left;">&quot;node_modules/**/*.ts&quot;, &quot;coverage/lcov-report/*.js&quot;</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">]</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">Here we are merging the generally recommended rules with specific ones for React and Prettier. We&#39;ve enabled the use of <span class="s22">debugger </span>and <span class="s22">console </span>statements, which will come in handy from time to time as we develop our app.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We&#39;ve also suppressed the rule about the ordering of <span class="s22">import </span>statements and object literal keys, to make life easier as we copy bits of code from this book.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">4. We can now start the app running in a development server, by entering the following command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npm start</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">After a few seconds, a browser window opens, with our app running:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 111pt;text-indent: 0pt;text-align: left;"><span><img width="287" height="244" alt="image" src="Image_144.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">Our React code is in the <span class="s22">src </span>folder.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;"><a name="bookmark302">5. With our app still running, open the </a><span class="s22">App.tsx </span>file. You&#39;ll immediately see a linting error on the <span class="s22">render </span>method, because we haven&#39;t specified the modifier:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 42pt;text-indent: 0pt;text-align: left;"><span><img width="472" height="119" alt="image" src="Image_145.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">So, let&#39;s fix that by adding <span class="s22">public </span>as the modifier:</p><p class="s12" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">class App extends Component {</p><p class="s21" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 110%;text-align: left;">public <span class="s12">render() { return ( ... );</span></p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">6. While we are still in <span class="s22">App.tsx</span>, let&#39;s change the anchor tag to the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">&lt;a className=&quot;App-link&quot; href=&quot;https://reactjs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;</p><p class="s12" style="padding-left: 96pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Learn React <span class="s21">and TypeScript</span></p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;/a&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">7. Save the file, and go back to the app in the browser. The app has automatically changed, showing the new content. Nice!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 114pt;text-indent: 0pt;text-align: left;"><span><img width="274" height="231" alt="image" src="Image_146.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;"><a name="bookmark303">create-react-app </a><span class="p">has configured a lot of great stuff for us in our project. This is great if we just want to quickly start learning React, and skip over how the React and TypeScript code is packaged up to be served from a web server.</span></p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;"><a name="bookmark255">In the next section, we&#39;ll do manually do some of what </a><span class="s22">create-react-app </span>did for us automatically. This will start to give us an understanding of what needs to happen when React and TypeScript apps are packaged up.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part119.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part121.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
