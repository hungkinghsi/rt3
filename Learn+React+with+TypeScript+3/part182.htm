<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Advanced Types</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part181.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part183.htm">Next &gt;</a></p><p class="s8" style="padding-top: 4pt;padding-left: 208pt;text-indent: 0pt;text-align: left;"><a name="bookmark441">Advanced Types</a><a name="bookmark460">&zwnj;</a><a name="bookmark461">&zwnj;</a></p><p style="padding-top: 23pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We&#39;ve already learned about a fair amount of the type system in TypeScript. In this chapter, we&#39;ll continue on this journey, this time diving into some of the more advanced types and concepts that will help us later in the book to create reusable strongly type React components.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><a href="https://cdp.packtpub.com/learn_react_17_with_typescript_3/wp-admin/post.php?post=31&amp;action=edit&amp;post_31" class="s20" target="_blank">We&#39;ll learn about how we can combine existing types to create union type. We&#39;ll find out in </a><span class="s12">Chapter 8</span>, <i>React Redux, </i>that these types are fundamental to creating strongly typed React Redux code.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 92%;text-align: left;"><a href="https://cdp.packtpub.com/learn_react_17_with_typescript_3/wp-admin/post.php?post=31&amp;action=edit&amp;post_31" class="s20" target="_blank">We briefly covered type guards in </a><span class="s12">Chapter 2</span>, <i>What is New in TypeScript 3</i>, when we learned about the <span class="s22">unknown </span>type. We look at these in more detail in this chapter.</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Generics are a TypeScript feature that many libraries use to allow consumers to create strongly typed apps with their library. React itself uses it in class components to allow us to create strongly typed props and states in the component. We cover generics in detail in this chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Overload signatures is a nice feature that allows us to have a single function taking different combinations of parameters. We&#39;ll learn how to use these in this chapter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Lookup and mapped types allow us to dynamically create new types from existing types. We learn all about these at the end of this chapter.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_262.png"/></span></p><p style="padding-left: 53pt;text-indent: -48pt;line-height: 22pt;text-align: left;">In this chapter, we&#39;ll learn about the following topics: Union types</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_263.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_264.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">Type guards Generics</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_265.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_266.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">Overload signatures Lookup and mapped types</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part183.htm">Technical requirements</a><a class="toc0" href="part184.htm">Union types</a><a class="toc1" href="part185.htm">String literal types</a><a class="toc1" href="part186.htm">String literal union types</a><a class="toc1" href="part187.htm">Discriminated union pattern</a><a class="toc0" href="part188.htm">Type guards</a><a class="toc1" href="part189.htm">Using the typeof keyword</a><a class="toc1" href="part190.htm">Using the instanceof keyword</a><a class="toc1" href="part191.htm">Using the in keyword</a><a class="toc1" href="part192.htm">Using a user-defined type guard</a><a class="toc0" href="part193.htm">Generics</a><a class="toc1" href="part194.htm">Generic functions</a><a class="toc1" href="part195.htm">Generic classes</a><a class="toc0" href="part196.htm">Overload signatures</a><a class="toc0" href="part197.htm">Lookup and mapped types</a><a class="toc0" href="part198.htm">Summary</a><a class="toc0" href="part199.htm">Questions</a><a class="toc0" href="part200.htm">Further reading</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part181.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part183.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
