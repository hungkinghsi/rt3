<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Getting Started with React and</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p class="s8" style="padding-top: 4pt;text-indent: 0pt;text-align: right;"><a name="bookmark251">Getting Started with React and</a><a name="bookmark296">&zwnj;</a><a name="bookmark297">&zwnj;</a></p><p class="s8" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">TypeScript</p><p style="padding-top: 23pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">React is a JavaScript library that helps us build the frontend of an app. It allows us to structure our apps using powerful and reusable components. It helps us manage the data that the components use, and their state, in a structured fashion. It uses something called a virtual DOM to efficiently render our frontend.</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: justify;">TypeScript can work beautifully with React, giving us the ability to add static types to our React components. The types help our code editor to surface problems while we write our React components, and give us tools to safely refactor them.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">In this chapter, we&#39;ll look at two different ways to create a React and TypeScript</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">project. We&#39;ll create our first React component, which will be a confirmation dialog. Early topics we&#39;ll cover are JSX and strongly typed props. We&#39;ll look at handling the dialog&#39;s button click events.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: justify;">We&#39;ll then look at declaring and interacting with strongly typed states, which will be used to hide and show the dialog. We&#39;ll discuss component life cycle methods, and touch on the ones that have been removed in React 17.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;line-height: 152%;text-align: justify;">Finally, we&#39;ll look at function components, and when these are used. In this chapter, we&#39;ll cover the following topics:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_134.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_135.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">Creating a React and TypeScript project Creating a class component</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_136.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_137.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">Handling class component events Class component states</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_138.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_139.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">Class component life cycle methods Creating a function component</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part118.htm">Technical requirements</a><a class="toc0" href="part119.htm">Creating a React and TypeScript project</a><a class="toc1" href="part120.htm">Using create-react-app</a><a class="toc1" href="part121.htm">Creating a project manually</a><a class="toc2" href="part122.htm">Creating our folder structure</a><a class="toc2" href="part123.htm">Creating package.json</a><a class="toc2" href="part124.htm">Adding TypeScript</a><a class="toc2" href="part125.htm">Creating tsconfig.json</a><a class="toc2" href="part126.htm">Adding TSLint</a><a class="toc2" href="part127.htm">Adding React with types</a><a class="toc2" href="part128.htm">Creating a root web page</a><a class="toc2" href="part129.htm">Creating a simple React component</a><a class="toc2" href="part130.htm">Adding webpack</a><a class="toc2" href="part131.htm">Project folders and files</a><a class="toc2" href="part132.htm">Creating start and build scripts</a><a class="toc0" href="part133.htm">Creating a class component</a><a class="toc1" href="part134.htm">Creating a basic class component</a><a class="toc1" href="part135.htm">JSX</a><a class="toc1" href="part136.htm">Component props</a><a class="toc1" href="part137.htm">Optional props</a><a class="toc1" href="part138.htm">Default prop values</a><a class="toc0" href="part139.htm">Handling class component events</a><a class="toc1" href="part140.htm">Basic event handlers</a><a class="toc1" href="part141.htm">The this problem</a><a class="toc1" href="part142.htm">Function props</a><a class="toc0" href="part143.htm">Class component states</a><a class="toc1" href="part144.htm">Defining state type</a><a class="toc1" href="part145.htm">Initializing the state</a><a class="toc1" href="part146.htm">Changing state</a><a class="toc0" href="part147.htm">Class component life cycle methods</a><a class="toc1" href="part148.htm">componentDidMount</a><a class="toc1" href="part149.htm">componentWillUnmount</a><a class="toc1" href="part150.htm">getDerivedStateFromProps</a><a class="toc1" href="part151.htm">getSnapshotBeforeUpdate and componentDidUpdate</a><a class="toc1" href="part152.htm">shouldComponentUpdate</a><a class="toc1" href="part153.htm">Deprecated life cycle methods</a><a class="toc0" href="part154.htm">Creating a function component</a><a class="toc1" href="part155.htm">Creating a basic function component</a><a class="toc1" href="part156.htm">Stateful function components</a><a class="toc1" href="part157.htm">Function component life cycle hooks</a><a class="toc1" href="part158.htm">Optimizing function component rendering</a><a class="toc0" href="part159.htm">Summary</a><a class="toc0" href="part160.htm">Questions</a><a class="toc0" href="part161.htm">Further reading</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
