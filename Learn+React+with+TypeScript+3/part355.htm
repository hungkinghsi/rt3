<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Chapter 2: What is New in TypeScript 3</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part354.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part356.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark957">Chapter 2: What is New in TypeScript 3</a><a name="bookmark969">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. We have the following function that draws a point:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">function drawPoint(x: number, y: number, z: number) {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">We also have the following <span class="s22">point </span>variable:</p><p class="s12" style="padding-top: 9pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">const point: [number, number, number] = [100, 200, 300];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">How can we call the <span class="s22">drawPoint </span>function in a terse manner?</p><p class="s12" style="padding-top: 9pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">drawPoint(<span class="s21">...point</span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. We need to create another version of the <span class="s22">drawPoint </span>function that can call by passing the x, y, and z point values as parameters:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">drawPoint(1, 2, 3);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">Internally in the implementation of <span class="s22">drawPoint </span>we draw the point from a tuple data type, <span class="s22">[number, number, number]</span>. How can we define the method parameter(s) with the required tuple?</p><p class="s12" style="padding-top: 8pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">function drawPoint(<span class="s21">...point: [number, number, number]</span>) {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. In your implementation of <span class="s22">drawPoint</span>, how can you make the <span class="s22">z </span>point optional?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 4pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">function drawPoint(<span class="s21">...point: [number, number, number?]</span>) {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">4. We have a function called <span class="s22">getData </span>that calls a web API to get some data. The number of different API resources is still growing, so we&#39;ve chosen to use <span class="s22">any </span>as the return type:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">function getData(resource: string): any { const data = ... // call the web API</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">if (resource === &quot;person&quot;) {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">data.fullName = `${data.firstName} ${data.surname}`;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">return data;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">How can we make <span class="s22">getData </span>more type-safe by leveraging the <span class="s22">unknown </span>type?</p><p class="s21" style="padding-top: 9pt;padding-left: 79pt;text-indent: -10pt;line-height: 106%;text-align: left;">class Person { firstName: string; surname: string; fullName: string;</p><p class="s21" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 110%;text-align: left;">function getData(resource: string): <span class="s21">unknown </span>{ const data = {};</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">if <span class="s21">(data instanceof Person) </span>{</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">data.fullName = `${data.firstName} ${data.surname}`;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">return data;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">5. What <span class="s22">build </span>flag can we use to determine which projects are out of date and need to be rebuilt without doing a rebuild?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">tsc --build ... <span class="s21">--dry --verbose</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part354.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part356.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
