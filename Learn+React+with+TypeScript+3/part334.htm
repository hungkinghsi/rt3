<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Testing pure functions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part333.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part335.htm">Next &gt;</a></p><h3 style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark897">Testing pure functions</a><a name="bookmark920">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_561.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">A pure function has a consistent output value for a given set of parameter values. Pure functions only depend on the function arguments, and on nothing outside the function. These functions also don&#39;t change any of the argument values passed into them.</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We&#39;ll start our unit testing journey in this section by implementing a unit test on a pure function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark921">The fact that these functions only depend on their parameter values makes them straightforward to unit test.</a></p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">We are going to implement a unit test on the <span class="s22">required </span>validator function we created in our <span class="s22">Form </span>component in the React shop we built. If you haven&#39;t already, open this project in Visual Studio Code.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;"><a name="bookmark898">We are going to use Jest, which is very popular for unit testing React apps, as our unit testing framework. Luckily the </a><span class="s22">create-react-app </span>tool installs and configures this for us when creating a project. So, Jest is ready to be used in our React shop project.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part335.htm">Creating a basic pure function test</a><a class="toc0" href="part336.htm">Understanding Jest watch options</a><a class="toc0" href="part337.htm">Adding structure to unit test results</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part333.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part335.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
