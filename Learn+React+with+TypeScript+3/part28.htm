<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>What this book covers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part27.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part29.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;">What this book covers</h3><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 1</span>, <i>TypeScript Basics</i>, introduces the TypeScript type system, covering the basic types. It moves on to cover how we can configure the incredibly flexible TypeScript compiler. Linting and code formatting are also introduced, along with their configuration.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><span class="s12">Chapter 2</span>, <i>What is New in TypeScript 3</i>, steps through the significant new features that were introduced in version 3 of TypeScript. Tuples feature heavily in this chapter, along with the closely related rest and spread syntax and how we can use these constructs with strong types. Setting up multiple related TypeScript projects efficiently is also covered, before moving on to improvements that have been made when setting default prop values in a React component.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 3</span>, <i>Getting Started with React and TypeScript</i>, begins with how projects that use both these technologies can be created. The chapter then introduces how strongly-typed React components can be built in both a class-based and functional manner. Managing state and hooking into life cycle events are also key topics in this chapter.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><span class="s12">Chapter 4</span>, <i>Routing with React Router</i>, introduces a library that can help us efficiently create an app with multiple pages. It covers how to create page links, and declare the components that should be rendered. Step by step, the chapter covers how to implement route parameters, query parameters, and nested routes. The chapter also covers how to load components from a route on demand in order to optimize performance in apps entailing lots of large pages.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 5</span>, <i>Advanced Types</i>, focuses solely on TypeScript types. On this occasion, more advanced, but still very useful, types are covered, such as generic types, union types, overload signatures, and keyof and lookup types.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 6</span>, <i>Component Patterns</i>, covers a number of common patterns for building React components while still maintaining strong types. Container components are stepped through first, followed by composite components. The popular render props pattern and higher-order components are also covered in this chapter.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 7</span>, <i>Working with Forms</i>, covers how forms can be implemented efficiently with React and TypeScript. A generic form component is built step by step, including validation and submission.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 8</span>, <i>React Redux</i>, covers how this popular library can help manage state across an app. A strongly typed Redux store is built with actions and reducers. The chapter finishes by looking at how a new React function can allow a Redux style structure within components without Redux.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 9</span>, <i>Interacting with RESTful APIs</i>, begins with detailed coverage of asynchronous code. The chapter then moves on to cover how we can interact with RESTful APIs using a native JavaScript function, as well as a popular open source library.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 10</span>, <i>Interacting with GraphQL APIs</i>, begins by introducing the syntax for reading and writing data. The chapter covers how to interact with a GraphQL server with an HTTP library before moving on to using a popular purpose-built library.</p><p style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;"><span class="s12">Chapter 11</span>, <i>Unit Testing with Jest</i>, covers how to test both pure functions and React components. A popular open source library is looked at to make tests less brittle when the internals of components are refactored. Some of the great features of Jest are stepped through, such as snapshot testing, mocking, and code coverage.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Answers<span class="p">, Contains the answers to all the exercises present in the chapters of this book.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part27.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part29.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
