<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Build mode</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part111.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part113.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark202">Build mode</a><a name="bookmark243">&zwnj;</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">The TypeScript 3 compiler includes the ability to perform smart incremental builds using the <span class="s22">--build </span>flag. Let&#39;s give this a try in our example multiple project solution:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">1. First, let&#39;s go to the root of the solution, open the terminal, and enter the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">tsc --build ProjectA --verbose</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">--verbose </span>flag tells the compiler to tell us the details of what it&#39;s doing. The messages confirm to us that it has picked up the <span class="s22">Shared </span>project as well as <span class="s22">ProjectA</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">Projects in this build:</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">* Shared/tsconfig.json</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">* ProjectA/tsconfig.json</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">The compiler then checks each project to see if it&#39;s up to date. If the project is up to date, we get something like the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">Project &#39;Shared/tsconfig.json&#39; is up to date because newest input &#39;Shared/src/utils.ts&#39; is older than oldest output &#39;Shared/dist/utils.js&#39;</p><p style="padding-top: 7pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. Let&#39;s make a change in the <span class="s22">utils.ts </span>file in the <span class="s22">Shared </span>project by adding a space somewhere, removing it, and then saving the file.</p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Let&#39;s build <span class="s22">ProjectA </span>again:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">tsc --build ProjectA --verbose</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">As expected, we get a message to indicate that the <span class="s22">Shared </span>project is out of date and will be rebuilt:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">Project &#39;Shared/tsconfig.json&#39; is out of date because oldest output &#39;Shared/dist/utils.js&#39; is older than newest input &#39;Shared/src/utils.ts</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Building project &#39;.../Shared/tsconfig.json&#39;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;"><a name="bookmark244">4. If we want to force a rebuild, even if projects are up to date, we can use the </a><span class="s22">-- force </span>flag. Let&#39;s give this a try:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">tsc --build ProjectA <span class="s21">--force </span>--verbose</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">When we do this, the compiler will still check whether projects are up to date (and tell us), but then it goes on to build each project.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 13pt;text-align: left;">So, in addition to great multiple-project support, we can speed up solution builds using the</p><p class="s22" style="padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">--build <span class="p">flag. As the solution grows over time, this becomes increasingly valuable. If ever we want to force a rebuild of a project, we can use the </span>--force <span class="p">flag along with </span>--build<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part111.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part113.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
