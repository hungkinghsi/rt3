<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Adding webpack</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark264">Adding webpack</a><a name="bookmark316">&zwnj;</a><a name="bookmark317">&zwnj;</a></p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Webpack is a popular tool that we can use to bundle all our JavaScript code into the <span class="s22">bundle.js </span>file that our <span class="s22">index.html </span>is expecting.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">1. Install webpack and its command-line interface into our project as development dependencies, by entering the following command in the terminal:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npm install webpack webpack-cli --save-dev</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Webpack also has a handy web server that we can use during development. So, let&#39;s install that as well via the terminal:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npm install webpack webpack-dev-server --save-dev</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 91%;text-align: left;">3. There&#39;s one final task to complete before we can start configuring webpack. This is to install a webpack plugin called <span class="s22">ts-loader</span>, which will help it load our TypeScript code. Install this as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">npm install ts-loader --save-dev</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 91%;text-align: left;">4. Now that we have all this webpack stuff in our project, it&#39;s time to configure it. Create a file called <span class="s22">webpack.config.js </span>in the project root, and enter the following into it:</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 22pt;text-align: left;">const path = require(&quot;path&quot;); module.exports = {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 8pt;text-align: left;">entry: &quot;./src/index.tsx&quot;,</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">module: { rules: [</p><p class="s12" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 134pt;text-indent: 0pt;line-height: 120%;text-align: left;">test: /\.tsx?$/, use: &quot;ts-loader&quot;,</p><p class="s12" style="padding-left: 134pt;text-indent: 0pt;text-align: left;">exclude: /node_modules/</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">]</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">resolve: {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">extensions: [&quot;.tsx&quot;, &quot;.ts&quot;, &quot;.js&quot;]</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">output: {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">path: path.resolve(<u> </u>dirname, &quot;dist&quot;), filename: &quot;bundle.js&quot;</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">devServer: {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">contentBase: path.join(<u> </u>dirname, &quot;dist&quot;),</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;"><a name="bookmark318">compress: true, port: 9000</a></p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">There&#39;s a fair bit going on here, so let&#39;s break it down:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_149.png"/></span></p><p style="padding-top: 7pt;padding-left: 76pt;text-indent: 0pt;text-align: left;">The <span class="s22">module.exports </span>is our webpack configuration object.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_150.png"/></span></p><p style="padding-top: 1pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">entry </span>field tells webpack where to start looking for modules to bundle. In our project, this is <span class="s22">index.tsx</span>.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_151.png"/></span></p><p style="padding-top: 2pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">module </span>field tells webpack how different modules will be treated. Our project is telling webpack to use <span class="s22">ts-loader </span>to handle files with <span class="s22">ts </span>and <span class="s22">tsx </span>extensions.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_152.png"/></span></p><p style="padding-top: 1pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">resolve </span>field tells webpack how to resolve modules. In our project, we need to process <span class="s22">tsx </span>and <span class="s22">.ts </span>files, as well as the standard <span class="s22">.js </span>files.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_153.png"/></span></p><p style="padding-top: 2pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">output </span>field tells webpack where to bundle our code. In our project, this is the file called <span class="s22">bundle.js </span>in the <span class="s22">dist </span>folder.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_154.png"/></span></p><p style="padding-top: 2pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">devServer </span>field configures the webpack development server. We are telling it that the root of the web server is the <span class="s22">dist </span>folder, and to serve files on <span class="s22">port 9000</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
