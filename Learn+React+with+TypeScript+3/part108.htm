<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Setting up an example</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part107.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part109.htm">Next &gt;</a></p><h4 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark235">Setting up an example</a></h4><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">In order to explore this, we are going to work through an example of a TypeScript project referencing another project in Visual Studio Code:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. Firstly, let&#39;s create a new folder called <span class="s22">Shared</span>. This is going to be the project for shared code that could potentially be used in many other projects.</p><p style="padding-top: 1pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">2. In our <span class="s22">Shared </span>folder, let&#39;s create the following <span class="s22">tsconfig.json </span>as a starting point:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">&quot;compilerOptions&quot;: { &quot;target&quot;: &quot;es5&quot;,</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">&quot;outDir&quot;: &quot;dist&quot;,</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">&quot;module&quot;: &quot;es6&quot;, &quot;sourceMap&quot;: true, &quot;noImplicitReturns&quot;: true, &quot;noImplicitAny&quot;: true, &quot;rootDir&quot;: &quot;src&quot;</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&quot;include&quot;: [&quot;src/**/*&quot;]</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">3. Let&#39;s create an <span class="s22">src </span>folder containing a TypeScript file called <span class="s22">utils.ts </span>with the following function, <span class="s22">randomString</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">export function randomString() {</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 10pt;line-height: 120%;text-align: left;">return Math.floor((1 + Math.random()) * 0x10000).toString(16);</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">This is a function that creates a random string of characters, as the name suggests. We are going to use this function in another project.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">4. Let&#39;s start to create our second project now, so go back up to the root of our solution, and create a folder called <span class="s22">ProjectA</span>.</p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. Inside <span class="s22">ProjectA</span>, let&#39;s create the following <span class="s22">tsconfig.json </span>as a starting point:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">&quot;compilerOptions&quot;: { &quot;target&quot;: &quot;es5&quot;,</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">&quot;outDir&quot;: &quot;dist&quot;,</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">&quot;module&quot;: &quot;es6&quot;, &quot;sourceMap&quot;: true, &quot;noImplicitReturns&quot;: true, &quot;noImplicitAny&quot;: true</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">},</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">&quot;include&quot;: [&quot;src/**/*&quot;]</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. Let&#39;s also create a folder called <span class="s22">src </span>in <span class="s22">ProjectA</span>, containing a TypeScript file called <span class="s22">person.ts</span>, with the following code:</p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 22pt;text-align: left;">import { randomString } from &quot;../../Shared/dist/utils&quot;; class Person {</p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;line-height: 8pt;text-align: left;">id: string;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;line-height: 120%;text-align: left;">name: string; constructor() {</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">this.id = randomString();</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">The code defines a simple class of information about a person. The unique identifier of the person is set to a random string in the constructor using the <span class="s22">randomString </span>function from our <span class="s22">Shared </span>project.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;"><a name="bookmark236">7. Let&#39;s open up the terminal, go to our </a><span class="s22">Shared </span>folder, and compile our <span class="s22">Shared</span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">project:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">cd Shared tsc</p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">The <span class="s22">Shared </span>project compiles just fine.</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">8. Let&#39;s try to compile <span class="s22">ProjectA </span>now:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">cd ..</p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">cd ProjectA tsc</p><p style="padding-top: 7pt;padding-left: 61pt;text-indent: 0pt;text-align: left;">We get a compilation error:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">error TS7016: Could not find a declaration file for module &#39;../../Shared/dist/utils&#39;. &#39;.../Shared/dist/utils.js&#39; implicitly has an &#39;any&#39; type.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark199">So, we created two dependent projects, but they don&#39;t properly understand each other yet, which is why we are getting the error. We&#39;ll resolve this in the following sections, using TypeScript 3&#39;s new features for multiple projects.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part107.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part109.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
