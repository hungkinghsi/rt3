<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Conditional redirect</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part172.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part174.htm">Next &gt;</a></p><h4 style="padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark391">Conditional redirect</a><a name="bookmark423">&zwnj;</a></h4><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">We can use the <span class="s22">Redirect </span>component to protect pages from unauthorized users. In our shop, we can use this to ensure only logged in users can access our <b>Admin </b>page. We do this through the following steps:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. Let&#39;s start by adding a route to a <span class="s22">LoginPage </span>in <span class="s22">Routes.tsx </span>after the route to the</p><p class="s9" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">Admin <span class="p">page:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;Route path=&quot;/login&quot; component={LoginPage} /&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2. Of course, <span class="s22">LoginPage </span>doesn&#39;t exist at the moment, so, let&#39;s create a file called</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">LoginPage.tsx <span class="p">and enter the following:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 240%;text-align: left;">import * as React from &quot;react&quot;; const LoginPage: React.SFC = () =&gt; {</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">return (</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;page-container&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">&lt;h1&gt;Login&lt;/h1&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">&lt;p&gt;You need to login ...&lt;/p&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">export default LoginPage;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. We can then go back to <span class="s22">Routes.tsx </span>and import <span class="s22">LoginPage</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">import LoginPage from &quot;./LoginPage&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">4. If we go to the running app and navigate to <span class="s22">&quot;/login&quot;</span>, we will see our <b>Login</b></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">page:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 147pt;text-indent: 0pt;text-align: left;"><span><img width="192" height="192" alt="image" src="Image_241.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">We are not going to fully implement our <b>Login </b>page; the page that we have implemented is enough to demonstrate a conditional redirect.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">5. Before we implement the conditional redirect on the <span class="s22">&quot;admin&quot; </span>path, we need to add a piece of state for whether a user is logged in or not in <span class="s22">Routes.tsx</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">const Routes: React.SFC = () =&gt; {</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">const [loggedIn, setLoggedIn] = React.useState(false);</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">return (</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;Router&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">...</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">&lt;/Router&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 107pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;"><a name="bookmark424">So, we have used a </a><span class="s22">useState </span>hook to add a state variable called <span class="s22">loggedIn </span>and a function to set it called <span class="s22">setLoggedIn</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. The final step is to add the following inside the <span class="s22">Route </span>component with the <span class="s22">&quot;/admin&quot; </span>path:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;Route path=&quot;/admin&quot;&gt;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">{loggedIn ? &lt;AdminPage /&gt; : &lt;Redirect to=&quot;/login&quot;</p><p class="s21" style="padding-left: 107pt;text-indent: 0pt;text-align: left;">/&gt;}</p><p style="text-indent: 0pt;text-align: left;"><span><img width="529" height="67" alt="image" src="Image_242.png"/></span></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We conditionally render <span class="s22">AdminPage </span>if the user is logged in, otherwise, we redirect to the <span class="s22">&quot;/login&quot; </span>path. If we now click the <span class="s22">admin </span>link in our running app, we get redirected to the <b>Login </b>page.</p><p style="text-indent: 0pt;text-align: left;"/><p class="s21" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">&lt;/Route&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">7. If we change the <span class="s22">loggedIn </span>state to be true when we initialize it, we are able to access our <b>Admin </b>page again:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">const [loggedIn, setLoggedIn] = React.useState(<span class="s21">true</span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part172.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part174.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
