<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Render props pattern</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part208.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part210.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark541">Render props pattern</a></h3><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">We used a form of the render props pattern in the previous section where we leveraged the <span class="s22">children </span>prop. We used this to allow a consumer of our <span class="s22">Tab </span>component to render custom content for the tab heading. This is great, but what if we want to allow the consumer to render custom content in different sections of the component? In our <span class="s22">Tabs </span>component, we haven&#39;t allowed the consumer to render the content of the tab yet. We definitely want the consumer to be able to specify custom content for this, but how do we do this now that we&#39;ve already used the <span class="s22">children </span>prop for the heading?</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 90%;text-align: left;">The answer is simple but not obvious at first. The answer is that, because props can be anything, they can be a function that renders content <span class="s23">â€“ </span>just like the special <span class="s22">children </span>prop. These types of prop are called render props. We can have as many render props as we like, giving us the flexibility to allow multiple sections of a component to be rendered by the consumer.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We actually used a render prop in the last section when we used React context. The way we consumed the context was via a render prop.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Next, we&#39;ll complete our <span class="s22">Tabs </span>component by leveraging the render props pattern.</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part210.htm">Completing Tabs with render props</a><a class="toc1" href="part211.htm">Using render prop for tab headings</a><a class="toc1" href="part212.htm">Using children prop for tab content</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part208.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part210.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
