<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Consuming a promised-based function</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part273.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part275.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark762">Consuming a promised-based function</a></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Let&#39;s have a quick look at some code that exposes a promise-based API:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">fetch(&quot;https://jsonplaceholder.typicode.com/posts&quot;)</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">.then(response =&gt; response.json())</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">.then(data =&gt; console.log(data))</p><p class="s12" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">.catch(json =&gt; console.log(&quot;error&quot;, json));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_470.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 94%;text-align: left;">This function is the native JavaScript <span class="s22">fetch </span>function for interacting with RESTful APIs</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_471.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">The function takes in a URL for the request</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_472.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_473.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 109%;text-align: left;">It has a <span class="s22">then </span>method to handle the response and reading of the response body It has a <span class="s22">catch </span>method to handle any errors</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 91%;text-align: left;">The code execution flows down as we would read it. We also don&#39;t have to do any additional work in the <span class="s22">then </span>methods to handle errors. So, this is much nicer than working with callback-based asynchronous code.</p><p style="padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark722">In the next section we&#39;ll create our own promised based function.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part273.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part275.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
