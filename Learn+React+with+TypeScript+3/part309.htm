<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Returning nested data</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part308.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part310.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark816">Returning nested data</a><a name="bookmark848">&zwnj;</a><a name="bookmark849">&zwnj;</a></p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Let&#39;s make a far more complex query in this section. We&#39;ll search for a GitHub repository, return information about it, including the number of stars it has and the last issues that have been raised as a nested array:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Let&#39;s start by entering the following query and executing it:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">query {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">repository (owner:&quot;facebook&quot;, name:&quot;react&quot;) { name</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">description</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">This time, we are asking for the <span class="s22">repository </span>object, but passing two parameters for the <span class="s22">owner </span>and <span class="s22">name </span>of the repository. We are asking for the <span class="s22">name </span>and <span class="s22">description </span>of the repository to be returned.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">We see that the repository and fields we asked for are returned:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="107" alt="image" src="Image_519.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">2. Let&#39;s now request the number of stars against the repository. To do this, we ask for the <span class="s22">totalCount </span>field within the <span class="s22">stargazers </span>nested object:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">query {</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">repository (owner:&quot;facebook&quot;, name:&quot;react&quot;) { name</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">description</p><p class="s21" style="padding-top: 1pt;padding-left: 123pt;text-indent: -10pt;line-height: 106%;text-align: left;">stargazers { totalCount</p><p class="s21" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">If we execute the query, we see these results returned:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="136" alt="image" src="Image_520.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Let&#39;s now add an alias to <span class="s22">totalCount </span>within <span class="s22">stargazers</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">stargazers {</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">stars:<span class="s12">totalCount</span></p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">If we execute the query, we see the stars count is returned against the alias we specified:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">&quot;data&quot;: { &quot;repository&quot;: {</p><p class="s12" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">&quot;name&quot;: &quot;react&quot;,</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">&quot;description&quot;: &quot;A declarative, efficient, and flexible</p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: -32pt;line-height: 120%;text-align: left;">JavaScript library for building user interfaces.&quot;, &quot;stargazers&quot;: {</p><p class="s21" style="padding-left: 134pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&quot;stars&quot;: <span class="s12">114998</span></p><p class="s12" style="padding-top: 1pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. Let&#39;s move on to requesting the last <span class="s22">5 </span>issues within the repository:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">{</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: -10pt;line-height: 120%;text-align: left;">repository (owner:&quot;facebook&quot;, name:&quot;react&quot;) { name</p><p class="s12" style="padding-left: 112pt;text-indent: 0pt;line-height: 120%;text-align: left;">description stargazers {</p><p class="s12" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">stars:totalCount</p><p class="s12" style="padding-top: 1pt;padding-left: 112pt;text-indent: 0pt;text-align: left;">}</p><p class="s21" style="padding-top: 1pt;padding-left: 123pt;text-indent: -10pt;line-height: 106%;text-align: left;">issues(last: 5) { edges {</p><p class="s21" style="padding-left: 145pt;text-indent: -10pt;line-height: 106%;text-align: left;">node { id</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 145pt;text-indent: 0pt;line-height: 106%;text-align: left;"><a name="bookmark850">title url</a></p><p class="s21" style="padding-left: 145pt;text-indent: 0pt;line-height: 10pt;text-align: left;">publishedAt</p><p class="s21" style="padding-left: 134pt;text-indent: 0pt;text-align: left;">}</p><p class="s21" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">}</p><p class="s21" style="padding-left: 112pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We request the <span class="s22">issues </span>object by passing <span class="s22">5 </span>into the last parameter. We then request an <span class="s22">edges </span>object containing a <span class="s22">node </span>object that in turn contains the issue fields we are interested in.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">So, what are the <span class="s22">edges </span>and <span class="s22">node </span>objects? Why can&#39;t we just request the fields we want directly? Well, this structure is in place to facilitate cursor-based pagination.</p><p style="padding-top: 7pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">If we execute the query, we get the last <span class="s22">5 </span>issues included in our result.</p><p style="padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;"><a name="bookmark817">So, GraphQL allows us to make a single web request for different bits of data returning just the fields we require. Doing a similar thing with the GitHub REST API would probably require multiple requests and we&#39;d get a lot more data than we need returned to us. It is these types of queries where GraphQL shines over REST.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part308.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part310.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
