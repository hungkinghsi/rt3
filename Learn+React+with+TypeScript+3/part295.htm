<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Timeouts</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part294.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part296.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark794">Timeouts</a></p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">Timing out requests after a certain amount of time can improve the user experience in our app:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">1. Let&#39;s add a timeout to our request:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">.get&lt;IPost[]&gt;(&quot;https://jsonplaceholder.typicode.com/posts&quot;, { headers: {</p><p class="s12" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&quot;Content-Type&quot;: &quot;application/json&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">},</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">timeout: 1</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">})</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 91%;text-align: left;">So, adding a timeout to an <span class="s22">axios </span>request is super simple. We just add a <span class="s22">timeout </span>property to the options object with an appropriate number of milliseconds. We have specified just 1 millisecond, so that we can hopefully see the request timing out.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;"><a name="bookmark795">2. Let&#39;s handle a timeout now in the </a><span class="s22">catch </span>method:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">.catch(ex =&gt; { const error =</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ex.code === &quot;ECONNABORTED&quot;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">? &quot;A timeout has occurred&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">: ex.response.status === 404</p><p class="s12" style="padding-top: 1pt;padding-left: 111pt;text-indent: 0pt;text-align: left;">? &quot;Resource not found&quot;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 32pt;line-height: 120%;text-align: left;">: &quot;An unexpected error has occurred&quot;; this.setState({ error });</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">So, we check the <span class="s22">code </span>property in the caught error object in order to determine whether a timeout has occurred.</p><p style="padding-top: 8pt;padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">If we look at the running app, we should get confirmation that a timeout has occurred with <b>A timeout has occurred </b>displayed in red.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">3. Let&#39;s now change the timeout to something more sensible so that we can move on to looking at how we can allow users to cancel requests in the next section:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">.get&lt;IPost[]&gt;(&quot;https://jsonplaceholder.typicode.com/posts&quot;, {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">...</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">timeout: 5000</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">})</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part294.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part296.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
