<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Adding basket state and actions to the store</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part259.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part261.htm">Next &gt;</a></p><p class="s24" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark665">Adding basket state and actions to the store</a><a name="bookmark702">&zwnj;</a><a name="bookmark703">&zwnj;</a></p><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">We&#39;ll add state management for our basket in this section. We&#39;ll create a new section in our store for this.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. First, let&#39;s create a new file for the types called <span class="s22">BasketTypes.ts </span>with the following content:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">import { IProduct } from &quot;./ProductsData&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">export enum BasketActionTypes { ADD = &quot;BASKET/ADD&quot;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">export interface IBasketState { readonly products: IProduct[];</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">export interface IBasketAdd { type: BasketActionTypes.ADD; product: IProduct;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">export type BasketActions = IBasketAdd;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_437.png"/></span></p><p style="padding-left: 76pt;text-indent: 0pt;line-height: 89%;text-align: left;">There is only one piece of state in our basket and that&#39;s an array of products in the basket.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_438.png"/></span></p><p style="padding-left: 76pt;text-indent: 0pt;text-align: left;">There is only one action as well. This is to add a product to the basket.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">2. Let&#39;s create a file called <span class="s22">BasketActions.ts </span>with the following content:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">import { BasketActionTypes, IBasketAdd } from &quot;./BasketTypes&quot;; import { IProduct } from &quot;./ProductsData&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">export const addToBasket = (product: IProduct): IBasketAdd =&gt; ({ product,</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">type: BasketActionTypes.ADD</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">This is the action creator for adding to the basket. The function takes in a product and returns it in the action with the appropriate action type.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">3. On to the reducer now. Let&#39;s create a file called <span class="s22">BasketReducer.ts </span>with the following import statements:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">import { Reducer } from &quot;redux&quot;;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">import { BasketActions, BasketActionTypes, IBasketState } from &quot;./BasketTypes&quot;;</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">4. Let&#39;s create an object for the initial basket state:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">const initialBasketState: IBasketState = { products: []</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">5. Let&#39;s create the reducer now:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">export const basketReducer: Reducer&lt;IBasketState, BasketActions&gt; = (state = initialBasketState, action) =&gt; {</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">switch (action.type) {</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: -10pt;line-height: 120%;text-align: left;">case BasketActionTypes.ADD: { return {</p><p class="s12" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">...state,</p><p class="s12" style="padding-top: 1pt;padding-left: 111pt;text-indent: 0pt;text-align: left;">products: state.products.concat(action.product)</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">};</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 39pt;text-indent: 0pt;text-align: center;">return state || initialBasketState;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: center;">This follows the same pattern as <span class="s22">productsReducer</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 93%;text-align: left;">One interesting point to note is how we elegantly add the <span class="s22">product </span>to the <span class="s22">products </span>array without mutating the original array. We use the JavaScript <span class="s22">concat </span>function, which creates a new array by merging the original with the parameter passed in. This is a great function to use in reducers where state changes involve adding items to arrays.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. Let&#39;s open up <span class="s22">Store.ts </span>now and import the new reducer and state for the basket:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">import { basketReducer } from &quot;./BasketReducer&quot;; import { IBasketState } from &quot;./BasketTypes&quot;;</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">7. Let&#39;s add the basket state to the store:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">export interface IApplicationState {</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">basket: IBasketState;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;"><a name="bookmark704">products: IProductsState;</a></p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 40pt;text-indent: 0pt;line-height: 13pt;text-align: left;">8. We have two reducers now. So, let&#39;s add the basket reducer to the</p><p class="s22" style="padding-left: 53pt;text-indent: 0pt;line-height: 13pt;text-align: left;">combineReducers <span class="p">function call:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">export const rootReducer = combineReducers&lt;IApplicationState&gt;({</p><p class="s21" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">basket: basketReducer,</p><p class="s12" style="padding-top: 1pt;padding-left: 101pt;text-indent: 0pt;text-align: left;">products: productsReducer</p><p class="s12" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">});</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Now that we&#39;ve adjusted our store, we can connect our <span class="s22">ProductPage </span>component to it.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part259.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part261.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
