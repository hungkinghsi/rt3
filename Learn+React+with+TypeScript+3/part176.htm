<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Nested routes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><h3 style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark430">Nested routes</a></h3><p style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 89%;text-align: left;">A nested route is when a URL is more than one level deep and it renders multiple components. We are going to implement some nested routes in this section in our <b>Admin </b>page. Our completed <b>Admin </b>page will look like the following screenshot:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="295" alt="image" src="Image_246.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">The URL in the preceding screenshot is 3 levels deep which renders the following:</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_247.png"/></span></p><p style="padding-top: 7pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">The top-level menu containing links for <b>Users </b>and <b>Products</b>.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_248.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_249.png"/></span></p><p style="padding-left: 53pt;text-indent: 0pt;text-align: left;">A menu containing all the users. This is just <b>Fred</b>, <b>Bob</b>, and <b>Jane </b>is our example. Information about the selected user.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">1. Let&#39;s start by opening <span class="s22">AdminPage.tsx </span>and add <span class="s22">import </span>statements for the following from <span class="s22">react-router-dom</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 91pt;text-indent: 0pt;line-height: 120%;text-align: left;">import { NavLink, Route, RouteComponentProps } from &quot;react- router-dom&quot;;</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_250.png"/></span></p><p style="padding-top: 7pt;padding-left: 76pt;text-indent: 0pt;text-align: left;">We&#39;ll use the <span class="s22">NavLink </span>component to render the menus</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_251.png"/></span></p><p style="padding-top: 1pt;padding-left: 76pt;text-indent: 0pt;text-align: left;">The <span class="s22">Route </span>component will be used to render the nested routes</p><p style="text-indent: 0pt;text-align: left;"><span><img width="5" height="5" alt="image" src="Image_252.png"/></span></p><p style="padding-top: 1pt;padding-left: 76pt;text-indent: 0pt;line-height: 94%;text-align: left;">The <span class="s22">RouteComponentProps </span>type will be used to get the <span class="s22">id </span>of a user from the URL</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;line-height: 14pt;text-align: left;">2. We are going to replace the <span class="s22">p </span>tag with an unordered list containing menu options</p><p class="s9" style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">Users <span class="p">and </span>Products<span class="p">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;page-container&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;h1&gt;Admin Panel&lt;/h1&gt;</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;ul className=&quot;admin-sections&gt;</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;li key=&quot;users&quot;&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 111pt;text-indent: -10pt;line-height: 106%;text-align: left;">&lt;NavLink to={`/admin/users`} activeClassName=&quot;admin-link- active&quot;&gt;</p><p class="s21" style="padding-left: 111pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Users</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;/NavLink&gt;</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;/li&gt;</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;li key=&quot;products&quot;&gt;</p><p class="s21" style="padding-left: 106pt;text-indent: -5pt;line-height: 106%;text-align: left;">&lt;NavLink to={`/admin/products`} activeClassName=&quot;admin-link- active&quot;&gt;</p><p class="s21" style="text-indent: 0pt;line-height: 10pt;text-align: right;">Products</p><p class="s21" style="text-indent: 0pt;text-align: right;">&lt;/NavLink&gt;</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;/li&gt;</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;/ul&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We use the <span class="s22">NavLink </span>component to navigate to the nested route for the two options.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">3. Let&#39;s add the CSS classes we have just referenced in <span class="s22">index.css</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">.admin-sections { list-style: none;</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;line-height: 120%;text-align: left;">margin: 0px 0px 20px 0px; padding: 0;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">.admin-sections li { display: inline-block; margin-right: 10px;</p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">.admin-sections li a { color: #222;</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">text-decoration: none;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">.admin-link-active {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">border-bottom: #6f6e6e solid 2px;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">4. Moving back to <span class="s22">AdminPage.tsx</span>, let&#39;s add two <span class="s22">Route </span>components beneath the menu we have just added. These will handle the <span class="s22">/admin/users</span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 13pt;text-align: left;">and <span class="s22">/admin/products </span>paths we referenced in our menu:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;div className=&quot;page-container&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;h1&gt;Admin Panel&lt;/h1&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;ul className=&quot;admin-sections&quot;&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;/ul&gt;</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;Route path=&quot;/admin/users&quot; component={AdminUsers} /&gt;</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;Route path=&quot;/admin/products&quot; component={AdminProducts} /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">5. We have just referenced <span class="s22">AdminUsers </span>and <span class="s22">AdminProducts </span>components that don&#39;t exist yet. Let&#39;s implement the <span class="s22">AdminProducts </span>component first by entering the following beneath the <span class="s22">AdminPage </span>component in <span class="s22">AdminPage.tsx</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">const AdminProducts: React.SFC = () =&gt; {</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">return &lt;div&gt;Some options to administer products&lt;/div&gt;;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;">So, this component just renders a bit of text on the screen.</p><p style="padding-top: 8pt;padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">6. Let&#39;s move on to the <span class="s22">AdminUsers </span>component now which is more complex. We&#39;ll start by defining an interface for a user along with some user data beneath</p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 13pt;text-align: left;">the <span class="s22">AdminProducts </span>component in <span class="s22">AdminPage.tsx</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">interface IUser { id: number; name: string;</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">isAdmin: boolean;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">const adminUsersData: IUser[] = [</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">{ id: 1, name: &quot;Fred&quot;, isAdmin: true },</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">{ id: 2, name: &quot;Bob&quot;, isAdmin: false },</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">{ id: 3, name: &quot;Jane&quot;, isAdmin: true }</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 50pt;text-indent: 0pt;text-align: left;">So, we have 3 users in our example.</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">7. Let&#39;s start to implement the <span class="s22">AdminUsers </span>component then in <span class="s22">AdminPage.tsx</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 79pt;text-indent: -10pt;line-height: 120%;text-align: left;">const AdminUsers: React.SFC = () =&gt; { return (</p><p class="s12" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">&lt;ul className=&quot;admin-sections&quot;&gt;</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">{adminUsersData.map(user =&gt; (</p><p class="s12" style="padding-top: 1pt;padding-left: 122pt;text-indent: 0pt;text-align: left;">&lt;li&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 144pt;text-indent: -10pt;line-height: 120%;text-align: left;">&lt;NavLink to={`/admin/users/${user.id}`} activeClassName=&quot;admin-link-active&quot;</p><p class="s12" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 144pt;text-indent: 0pt;text-align: left;">{user.name}</p><p class="s12" style="padding-top: 1pt;padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;/NavLink&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 122pt;text-indent: 0pt;text-align: left;">&lt;/li&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;text-align: right;"><a name="bookmark431">))}</a></p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">&lt;/ul&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 89%;text-align: left;">The component renders a link containing each user&#39;s name. The link is to a nested path which will eventually show details about the user.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -13pt;line-height: 89%;text-align: left;">8. So, we need to define another route that will call a component to render details about a user. We can do this by using another <span class="s22">Route </span>component:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;ul className=&quot;admin-sections&quot;&gt;</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">...</p><p class="s12" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">&lt;/ul&gt;</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">&lt;Route path=&quot;/admin/users/:id&quot; component={AdminUser} /&gt;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 53pt;text-indent: -13pt;line-height: 94%;text-align: left;">9. The path we have just defined routes to an <span class="s22">AdminUser </span>component we haven&#39;t defined yet. So, let&#39;s make a start on this beneath the <span class="s22">AdminUsers </span>component:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">const AdminUser: React.SFC&lt;RouteComponentProps&lt;{ id: string }&gt;&gt; = props =&gt; {</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">return null;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;line-height: 94%;text-align: left;">We use <span class="s22">RouteComponentProps </span>to get the <span class="s22">id </span>from the URL path and make this available in the props.</p><p style="padding-top: 7pt;padding-left: 35pt;text-indent: 0pt;line-height: 14pt;text-align: left;">10. We can now use the <span class="s22">id </span>from the path to get the user from our <span class="s22">adminUsersData</span></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 14pt;text-align: left;">array:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">const AdminUser: React.SFC&lt;RouteComponentProps&lt;{ id: string }&gt;&gt; = props =&gt; {</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;line-height: 10pt;text-align: left;">let user: IUser;</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">if (props.match.params.id) {</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;line-height: 106%;text-align: left;">const id: number = parseInt(props.match.params.id, 10); user = adminUsersData.filter(u =&gt; u.id === id)[0];</p><p class="s21" style="padding-left: 90pt;text-indent: -10pt;line-height: 106%;text-align: left;">} else { return null;</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">return null;</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;">11. Now that we have the <span class="s22">user </span>object, we can render the information within it.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 5pt;padding-left: 68pt;text-indent: 0pt;line-height: 120%;text-align: left;">const AdminUser: React.SFC&lt;RouteComponentProps&lt;{ id: string }&gt;&gt; = props =&gt; {</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">let user: IUser;</p><p class="s12" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">if (props.match.params.id) {</p><p class="s12" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;line-height: 120%;text-align: left;">const id: number = parseInt(props.match.params.id, 10); user = adminUsersData.filter(u =&gt; u.id === id)[0];</p><p class="s12" style="padding-left: 90pt;text-indent: -10pt;line-height: 120%;text-align: left;">} else { return null;</p><p class="s12" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">}</p><p class="s21" style="padding-top: 1pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">return (</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s21" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">&lt;b&gt;Id: &lt;/b&gt;</p><p class="s21" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">&lt;span&gt;{user.id.toString()}&lt;/span&gt;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;div&gt;</p><p class="s21" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">&lt;b&gt;Is Admin: &lt;/b&gt;</p><p class="s21" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">&lt;span&gt;{user.isAdmin.toString()}&lt;/span&gt;</p><p class="s21" style="padding-left: 101pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s21" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">&lt;/div&gt;</p><p class="s21" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">);</p><p class="s12" style="padding-top: 1pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 35pt;text-indent: 0pt;line-height: 13pt;text-align: left;">12. If we go to the running app, go to the <b>Admin </b>page and click on the <b>Products</b></p><p style="padding-left: 53pt;text-indent: 0pt;line-height: 13pt;text-align: left;">menu item, it will look like below:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="174" height="76" alt="image" src="Image_253.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="484" height="124" alt="image" src="Image_254.png"/></span></p><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -18pt;line-height: 89%;text-align: left;">13. If we click on the <b>Users </b>menu item, we&#39;ll see the 3 users that we can click on to get more information about a user. This will look like the first screenshot in this section.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 94%;text-align: left;">So, in order to implement nested routes, we create the necessary links using <span class="s22">NavLink </span>or <span class="s22">Link </span>components and route those links to the component to render the content using a <span class="s22">Route </span>component. We already knew about these components before this section, so, we just needed to learn how to use these in the context of nested routes.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../Learn+React+with+TypeScript+3.htm">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
